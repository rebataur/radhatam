2023-02-04 12:19:38.468 IST [21640] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-04 12:19:38.477 IST [21640] LOG:  listening on IPv6 address "::1", port 5432
2023-02-04 12:19:38.483 IST [21640] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-04 12:19:38.543 IST [13676] LOG:  database system was shut down at 2023-02-03 23:36:50 IST
2023-02-04 12:19:38.604 IST [21640] LOG:  database system is ready to accept connections
2023-02-04 19:23:55.788 IST [19996] ERROR:  canceling statement due to user request
2023-02-04 19:23:55.788 IST [21640] LOG:  received fast shutdown request
2023-02-04 19:23:55.794 IST [21640] LOG:  aborting any active transactions
2023-02-04 19:23:55.794 IST [10428] FATAL:  terminating connection due to administrator command
2023-02-04 19:23:55.818 IST [21640] LOG:  background worker "logical replication launcher" (PID 19996) exited with exit code 1
2023-02-04 19:23:55.834 IST [9420] LOG:  shutting down
2023-02-04 19:23:55.886 IST [21640] LOG:  database system is shut down
2023-02-04 22:13:55.506 IST [14880] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-04 22:13:55.517 IST [14880] LOG:  listening on IPv6 address "::1", port 5432
2023-02-04 22:13:55.524 IST [14880] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-04 22:13:55.572 IST [13684] LOG:  database system was shut down at 2023-02-04 19:23:55 IST
2023-02-04 22:13:55.654 IST [14880] LOG:  database system is ready to accept connections
2023-02-05 14:06:36.123 IST [13244] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-05 14:06:36.132 IST [13244] LOG:  listening on IPv6 address "::1", port 5432
2023-02-05 14:06:36.138 IST [13244] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-05 14:06:36.183 IST [14348] LOG:  database system was interrupted; last known up at 2023-02-04 22:18:59 IST
2023-02-05 14:06:36.588 IST [14348] LOG:  database system was not properly shut down; automatic recovery in progress
2023-02-05 14:06:36.596 IST [14348] LOG:  redo starts at 0/1C00E8D8
2023-02-05 14:06:36.596 IST [14348] LOG:  invalid record length at 0/1C00E9C0: wanted 24, got 0
2023-02-05 14:06:36.596 IST [14348] LOG:  redo done at 0/1C00E988 system usage: CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s
2023-02-05 14:06:36.687 IST [13244] LOG:  database system is ready to accept connections
2023-02-05 14:08:05.178 IST [12256] FATAL:  role "myprojectuser" does not exist
2023-02-05 14:09:56.939 IST [20096] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:10:40.138 IST [21568] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:12:21.986 IST [19732] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:12:55.672 IST [8100] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:13:37.876 IST [1528] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:14:32.533 IST [11420] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:14:50.652 IST [2308] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:15:05.459 IST [1876] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:15:07.773 IST [6092] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:15:25.869 IST [8296] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:16:08.020 IST [14952] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:16:40.688 IST [19732] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:17:06.223 IST [11092] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:17:24.430 IST [8072] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:17:53.318 IST [5992] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:18:14.588 IST [8288] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:18:20.102 IST [18308] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:18:36.119 IST [9856] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:19:05.713 IST [22272] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:21:59.641 IST [21548] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:24:18.560 IST [16832] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:24:41.708 IST [18956] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:25:24.793 IST [3580] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:25:30.199 IST [13720] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:25:34.538 IST [22272] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:26:28.271 IST [14636] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:26:47.459 IST [17692] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:26:57.048 IST [13548] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:26:58.651 IST [14516] ERROR:  invalid input syntax for type integer: "2902.55" at character 60
2023-02-05 14:26:58.651 IST [14516] STATEMENT:  insert into bhavcopy values(500002,'ABB LTD.    ','A ','Q','2902.55','2960.65','2755.90','2793.50','2794.90','2826.55',2777,14434,'41307393.00','
	')
2023-02-05 14:27:26.534 IST [10244] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:27:41.330 IST [7192] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:27:51.938 IST [13332] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:28:08.650 IST [12912] ERROR:  invalid input syntax for type integer: "2927.95" at character 60
2023-02-05 14:28:08.650 IST [12912] STATEMENT:  insert into bhavcopy values(500002,'ABB LTD.    ','A ','Q','2927.95','2979.25','2911.60','2918.75','2919.00','2920.00',1044,6018,'17718758.00','
	')
2023-02-05 14:28:36.979 IST [22324] ERROR:  invalid input syntax for type integer: "2927.95" at character 60
2023-02-05 14:28:36.979 IST [22324] STATEMENT:  insert into bhavcopy values(500002,'ABB LTD.    ','A ','Q','2927.95','2979.25','2911.60','2918.75','2919.00','2920.00',1044,6018,'17718758.00','
	')
2023-02-05 14:29:09.883 IST [22468] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:29:13.188 IST [14900] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:29:19.726 IST [11420] ERROR:  invalid input syntax for type integer: "2874.05" at character 60
2023-02-05 14:29:19.726 IST [11420] STATEMENT:  insert into bhavcopy values(500002,'ABB LTD.    ','A ','Q','2874.05','2893.15','2760.00','2802.85','2802.85','2874.75',1810,8192,'23003458.00','
	')
2023-02-05 14:30:38.418 IST [15508] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:30:47.552 IST [21512] ERROR:  syntax error at or near "LTD" at character 42
2023-02-05 14:30:47.552 IST [21512] STATEMENT:  insert into bhavcopy values('500002',ABB LTD.    ,A ,'Q',2802.85,2868.75,2802.40,2812.95,2818.20,2802.85,'804','4459',12608914.00,
	)
2023-02-05 14:31:01.746 IST [8656] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:31:05.032 IST [13992] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:31:44.079 IST [14720] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:32:08.346 IST [1832] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:32:25.400 IST [11972] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:32:42.527 IST [21396] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:35:12.492 IST [11684] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:36:31.884 IST [20420] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:38:39.964 IST [8884] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:39:03.052 IST [22168] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:40:20.035 IST [7860] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:44:42.275 IST [8444] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 14:46:04.776 IST [18712] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:05:55.143 IST [13520] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:06:26.760 IST [5196] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:07:01.650 IST [15992] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:07:17.740 IST [5852] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:07:22.208 IST [18488] ERROR:  invalid input syntax for type numeric: "
	" at character 128
2023-02-05 15:07:22.208 IST [18488] STATEMENT:  insert into bhavcopy values(500002,'ABB LTD.    ','A ','Q',2954.85,2955.00,2919.45,2943.00,2944.45,2943.85,633,2875,8445302.00,'
	')
2023-02-05 15:07:40.062 IST [22324] ERROR:  invalid input syntax for type numeric: "
	" at character 128
2023-02-05 15:07:40.062 IST [22324] STATEMENT:  insert into bhavcopy values(500002,'ABB LTD.    ','A ','Q',2954.85,2955.00,2919.45,2943.00,2944.45,2943.85,633,2875,8445302.00,'
	')
2023-02-05 15:07:52.241 IST [22324] ERROR:  invalid input syntax for type numeric: "" at character 128
2023-02-05 15:07:52.241 IST [22324] STATEMENT:  insert into bhavcopy values(500002,'ABB LTD.    ','A ','Q',2954.85,2955.00,2919.45,2943.00,2944.45,2943.85,633,2875,8445302.00,'')
2023-02-05 15:10:54.050 IST [11816] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:10:56.274 IST [18204] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:12:18.020 IST [7300] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:12:27.191 IST [20944] ERROR:  column radhatamapp_field.order does not exist at character 186
2023-02-05 15:12:27.191 IST [20944] STATEMENT:  SELECT "radhatamapp_field"."id", "radhatamapp_field"."entity_id", "radhatamapp_field"."actual_name", "radhatamapp_field"."name", "radhatamapp_field"."main", "radhatamapp_field"."type", "radhatamapp_field"."order", "radhatamapp_entity"."id", "radhatamapp_entity"."name", "radhatamapp_entity"."child_id" FROM "radhatamapp_field" INNER JOIN "radhatamapp_entity" ON ("radhatamapp_field"."entity_id" = "radhatamapp_entity"."id") WHERE "radhatamapp_field"."entity_id" IN (4)
2023-02-05 15:12:27.210 IST [20944] ERROR:  column radhatamapp_field.order does not exist at character 186
2023-02-05 15:12:27.210 IST [20944] STATEMENT:  SELECT "radhatamapp_field"."id", "radhatamapp_field"."entity_id", "radhatamapp_field"."actual_name", "radhatamapp_field"."name", "radhatamapp_field"."main", "radhatamapp_field"."type", "radhatamapp_field"."order", "radhatamapp_entity"."id", "radhatamapp_entity"."name", "radhatamapp_entity"."child_id" FROM "radhatamapp_field" INNER JOIN "radhatamapp_entity" ON ("radhatamapp_field"."entity_id" = "radhatamapp_entity"."id") WHERE "radhatamapp_field"."entity_id" IN (4) LIMIT 21
2023-02-05 15:12:27.211 IST [20944] ERROR:  column radhatamapp_field.order does not exist at character 186
2023-02-05 15:12:27.211 IST [20944] STATEMENT:  SELECT "radhatamapp_field"."id", "radhatamapp_field"."entity_id", "radhatamapp_field"."actual_name", "radhatamapp_field"."name", "radhatamapp_field"."main", "radhatamapp_field"."type", "radhatamapp_field"."order", "radhatamapp_entity"."id", "radhatamapp_entity"."name", "radhatamapp_entity"."child_id" FROM "radhatamapp_field" INNER JOIN "radhatamapp_entity" ON ("radhatamapp_field"."entity_id" = "radhatamapp_entity"."id") WHERE "radhatamapp_field"."entity_id" IN (4) LIMIT 21
2023-02-05 15:12:27.211 IST [20944] ERROR:  column radhatamapp_field.order does not exist at character 186
2023-02-05 15:12:27.211 IST [20944] STATEMENT:  SELECT "radhatamapp_field"."id", "radhatamapp_field"."entity_id", "radhatamapp_field"."actual_name", "radhatamapp_field"."name", "radhatamapp_field"."main", "radhatamapp_field"."type", "radhatamapp_field"."order", "radhatamapp_entity"."id", "radhatamapp_entity"."name", "radhatamapp_entity"."child_id" FROM "radhatamapp_field" INNER JOIN "radhatamapp_entity" ON ("radhatamapp_field"."entity_id" = "radhatamapp_entity"."id") WHERE "radhatamapp_field"."entity_id" IN (4) LIMIT 21
2023-02-05 15:12:27.212 IST [20944] ERROR:  column radhatamapp_field.order does not exist at character 186
2023-02-05 15:12:27.212 IST [20944] STATEMENT:  SELECT "radhatamapp_field"."id", "radhatamapp_field"."entity_id", "radhatamapp_field"."actual_name", "radhatamapp_field"."name", "radhatamapp_field"."main", "radhatamapp_field"."type", "radhatamapp_field"."order", "radhatamapp_entity"."id", "radhatamapp_entity"."name", "radhatamapp_entity"."child_id" FROM "radhatamapp_field" INNER JOIN "radhatamapp_entity" ON ("radhatamapp_field"."entity_id" = "radhatamapp_entity"."id") WHERE "radhatamapp_field"."entity_id" IN (4) LIMIT 21
2023-02-05 15:12:57.092 IST [19228] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:16:42.656 IST [14812] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:17:58.497 IST [11816] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:18:30.072 IST [18020] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:18:53.448 IST [5044] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:18:55.788 IST [18508] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:19:13.855 IST [20588] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:19:16.171 IST [10672] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:20:48.663 IST [21100] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:21:23.694 IST [2276] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:21:42.913 IST [3492] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:23:10.175 IST [7300] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:23:17.691 IST [6064] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:23:57.749 IST [10884] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:24:14.813 IST [8988] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:24:33.996 IST [17276] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:24:38.404 IST [1416] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:25:06.948 IST [14544] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:25:30.284 IST [7652] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:25:49.432 IST [18040] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:27:10.487 IST [11816] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:28:44.497 IST [2308] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:29:58.144 IST [8820] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:33:42.222 IST [9580] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:33:44.535 IST [10992] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:33:56.327 IST [1528] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:33:58.616 IST [15516] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:36:29.467 IST [8272] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:36:33.845 IST [21904] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:37:12.226 IST [11972] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:37:50.087 IST [19280] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:38:38.341 IST [18104] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:40:33.123 IST [13424] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:42:43.710 IST [19844] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:45:26.119 IST [20324] ERROR:  INSERT has more target columns than expressions at character 31
2023-02-05 15:45:26.119 IST [20324] STATEMENT:  insert into bhavcopy (sc_code,sc_name,sc_group,sc_type,open,high,low,close,last,prevclose,no_trades,no_of_shrs,net_turnov,tdcloindi
	) values('
	')
2023-02-05 15:47:34.273 IST [11372] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:47:43.906 IST [1568] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:47:56.775 IST [15172] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:48:01.199 IST [8280] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:49:17.985 IST [14600] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:50:14.138 IST [12080] ERROR:  syntax error at or near "," at character 249
2023-02-05 15:50:14.138 IST [12080] STATEMENT:  create table if not exists bhavcopy(low NUMERIC,close NUMERIC,last NUMERIC,prevclose NUMERIC,no_trades INTEGER,no_of_shrs INTEGER,net_turnov NUMERIC,sc_name TEXT,sc_group TEXT,sc_type TEXT,tdcloindi
	 TEXT,sc_code INTEGER,open NUMERIC,high NUMERIC,,file_name text)
2023-02-05 15:50:39.456 IST [22496] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:50:42.249 IST [22340] ERROR:  syntax error at or near "," at character 249
2023-02-05 15:50:42.249 IST [22340] STATEMENT:  create table if not exists bhavcopy(low NUMERIC,close NUMERIC,last NUMERIC,prevclose NUMERIC,no_trades INTEGER,no_of_shrs INTEGER,net_turnov NUMERIC,sc_name TEXT,sc_group TEXT,sc_type TEXT,tdcloindi
	 TEXT,sc_code INTEGER,open NUMERIC,high NUMERIC,,file_name text)
2023-02-05 15:50:57.629 IST [13808] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:51:19.735 IST [17816] ERROR:  missing FROM-clause entry for table "eq010223" at character 260
2023-02-05 15:51:19.735 IST [17816] STATEMENT:  insert into bhavcopy (sc_code,sc_name,sc_group,sc_type,open,high,low,close,last,prevclose,no_trades,no_of_shrs,net_turnov,tdcloindi
	,file_name) values(500002,'ABB LTD.    ','A ','Q',2902.55,2960.65,2755.90,2793.50,2794.90,2826.55,2777,14434,41307393.00,'
	',EQ010223.CSV)
2023-02-05 15:52:08.110 IST [2528] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:52:16.941 IST [1708] ERROR:  missing FROM-clause entry for table "eq010223" at character 260
2023-02-05 15:52:16.941 IST [1708] STATEMENT:  insert into bhavcopy (sc_code,sc_name,sc_group,sc_type,open,high,low,close,last,prevclose,no_trades,no_of_shrs,net_turnov,tdcloindi
	,file_name) values(500002,'ABB LTD.    ','A ','Q',2902.55,2960.65,2755.90,2793.50,2794.90,2826.55,2777,14434,41307393.00,'
	',EQ010223.CSV)
2023-02-05 15:52:30.423 IST [20168] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 15:56:12.879 IST [12240] ERROR:  INSERT has more target columns than expressions at character 39
2023-02-05 15:56:12.879 IST [12240] STATEMENT:  insert into bhavcopy (sc_code,sc_name,sc_group,sc_type,open,high,low,close,last,prevclose,no_trades,no_of_shrs,net_turnov,tdcloindi
	,file_name) values('
	','EQ110522.CSV')
2023-02-05 16:28:14.121 IST [17708] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 16:28:47.814 IST [12572] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 16:29:01.598 IST [9412] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 16:32:12.633 IST [7772] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 16:39:09.015 IST [4420] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 16:42:04.635 IST [6944] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 16:42:10.824 IST [19108] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 16:42:49.874 IST [2380] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 16:58:31.655 IST [14428] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:00:23.003 IST [6724] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:00:47.288 IST [17296] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:07:58.871 IST [16592] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:08:57.133 IST [5080] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:09:07.857 IST [8256] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:16:19.004 IST [4356] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:16:22.371 IST [10168] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:17:08.776 IST [14308] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:17:40.341 IST [17412] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:17:59.661 IST [21372] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:27:21.638 IST [11232] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:29:07.805 IST [11164] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:30:31.991 IST [20908] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:30:54.071 IST [22484] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:33:44.741 IST [16984] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:34:45.731 IST [22288] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:34:55.408 IST [20144] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:35:42.549 IST [9480] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:35:57.380 IST [14968] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:36:24.832 IST [5080] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:36:32.336 IST [7500] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:37:46.003 IST [828] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:38:34.431 IST [18692] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:38:53.743 IST [20012] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:41:49.934 IST [10500] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:41:53.264 IST [16064] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 17:42:19.627 IST [21784] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 19:19:36.515 IST [14192] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 19:19:41.688 IST [11540] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 19:19:51.278 IST [13220] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 19:19:59.796 IST [572] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 19:20:38.984 IST [15736] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 19:20:41.215 IST [9224] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 19:20:44.517 IST [15836] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:17:49.294 IST [6264] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:18:01.864 IST [18528] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:18:17.710 IST [8440] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:20:25.735 IST [11456] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:20:31.116 IST [13332] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:22:07.139 IST [13368] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:22:55.919 IST [21852] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:25:49.233 IST [14316] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:25:51.019 IST [18700] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:27:00.367 IST [21860] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:27:07.868 IST [18372] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:31:43.697 IST [14428] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:33:14.213 IST [16700] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:33:22.754 IST [15896] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:33:25.055 IST [17272] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:33:52.449 IST [21284] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:39:51.156 IST [4776] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:42:50.875 IST [17212] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:43:05.922 IST [14048] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:43:10.334 IST [13208] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:52:48.144 IST [6072] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:53:10.620 IST [10292] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 21:58:54.562 IST [21772] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:18:36.647 IST [22212] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:18:54.517 IST [12100] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:26:51.975 IST [12912] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:26:56.319 IST [14192] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:27:12.237 IST [12876] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:27:16.635 IST [16568] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:27:46.413 IST [912] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:28:34.920 IST [17916] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:29:37.966 IST [3904] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:29:45.509 IST [13548] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:29:54.380 IST [3312] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:30:06.127 IST [12520] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:30:18.893 IST [13936] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:30:23.313 IST [5944] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:30:43.473 IST [15432] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:30:58.319 IST [12212] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:31:02.718 IST [19756] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:31:19.618 IST [4016] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:31:30.289 IST [20988] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:32:44.978 IST [6300] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:33:05.234 IST [22516] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:33:56.560 IST [20000] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:36:32.089 IST [3560] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:36:35.474 IST [19208] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:37:21.923 IST [1156] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:38:13.683 IST [20108] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:38:55.948 IST [5516] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:39:41.355 IST [7200] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:39:56.136 IST [19968] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:40:12.031 IST [6136] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:40:35.254 IST [6244] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:40:47.959 IST [22200] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:40:50.217 IST [16836] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:41:29.355 IST [19980] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:41:35.756 IST [1840] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:42:17.757 IST [13720] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:42:35.760 IST [2116] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:43:18.946 IST [4776] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:43:38.077 IST [5960] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:44:01.543 IST [18836] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:46:21.183 IST [12312] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:46:39.268 IST [16836] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:46:47.898 IST [13376] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:48:19.147 IST [15200] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:48:53.940 IST [19340] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:49:09.922 IST [22324] ERROR:  column bhavcopy.scrip_code does not exist at character 213
2023-02-05 23:49:09.922 IST [22324] HINT:  Perhaps you meant to reference the column "bhavcopy.sc_code".
2023-02-05 23:49:09.922 IST [22324] STATEMENT:  
	select scrip_code,company,isin_no,close_price,sc_name,sc_group,sc_type,tdcloindi,sc_code,open,high,low,close,last,prevclose,no_trades,no_of_shrs,net_turnov from sensex left join bhavcopy on sensex.scrip_code = bhavcopy.scrip_code limit 5 
2023-02-05 23:50:55.648 IST [3628] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-05 23:53:25.747 IST [22324] ERROR:  LIMIT #,# syntax is not supported at character 231
2023-02-05 23:53:25.747 IST [22324] HINT:  Use separate LIMIT and OFFSET clauses.
2023-02-05 23:53:25.747 IST [22324] STATEMENT:  select scrip_code,company,isin_no,close_price,sc_name,sc_group,sc_type,tdcloindi,sc_code,open,high,low,close,last,prevclose,no_trades,no_of_shrs,net_turnov from sensex left join bhavcopy on sensex.scrip_code = bhavcopy.sc_code
	
	limit 1,5
2023-02-05 23:53:31.316 IST [22324] ERROR:  LIMIT #,# syntax is not supported at character 231
2023-02-05 23:53:31.316 IST [22324] HINT:  Use separate LIMIT and OFFSET clauses.
2023-02-05 23:53:31.316 IST [22324] STATEMENT:  select scrip_code,company,isin_no,close_price,sc_name,sc_group,sc_type,tdcloindi,sc_code,open,high,low,close,last,prevclose,no_trades,no_of_shrs,net_turnov from sensex left join bhavcopy on sensex.scrip_code = bhavcopy.sc_code
	
	limit 5,1
2023-02-06 00:49:12.541 IST [7708] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:49:43.904 IST [12452] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:49:52.453 IST [21392] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:50:04.123 IST [15584] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:50:07.467 IST [1352] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:50:32.818 IST [5440] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:50:50.750 IST [2692] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:51:32.832 IST [8072] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:51:43.435 IST [12012] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:52:07.571 IST [15456] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:53:40.601 IST [6084] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:54:23.781 IST [10680] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:55:41.921 IST [13016] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 00:56:16.627 IST [10252] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 01:01:27.573 IST [3116] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 01:01:43.550 IST [10868] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 01:02:21.751 IST [15604] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 01:11:29.525 IST [18168] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 01:12:02.961 IST [8212] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 01:56:23.193 IST [13988] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 01:56:28.661 IST [18124] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 01:56:53.121 IST [14244] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 01:57:23.888 IST [9960] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 01:58:05.062 IST [12764] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:00:19.243 IST [6004] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:00:48.026 IST [12068] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:03:07.542 IST [11232] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:05:22.312 IST [13744] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:05:52.832 IST [18500] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:06:05.535 IST [13148] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:06:32.841 IST [4580] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:06:45.612 IST [8464] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:08:08.472 IST [20412] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:08:17.042 IST [7120] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:09:06.379 IST [13568] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:09:14.931 IST [8628] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:10:07.527 IST [1840] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:10:56.887 IST [22232] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:11:13.657 IST [18480] ERROR:  column radhatamapp_field.derived_level does not exist at character 304
2023-02-06 02:11:13.657 IST [18480] STATEMENT:  SELECT "radhatamapp_field"."id", "radhatamapp_field"."entity_id", "radhatamapp_field"."actual_name", "radhatamapp_field"."name", "radhatamapp_field"."main", "radhatamapp_field"."type", "radhatamapp_field"."child_entity_id", "radhatamapp_field"."child_field_id", "radhatamapp_field"."is_derived_column", "radhatamapp_field"."derived_level" FROM "radhatamapp_field" WHERE "radhatamapp_field"."entity_id" = 11
2023-02-06 02:11:13.693 IST [18480] ERROR:  column radhatamapp_field.derived_level does not exist at character 304
2023-02-06 02:11:13.693 IST [18480] STATEMENT:  SELECT "radhatamapp_field"."id", "radhatamapp_field"."entity_id", "radhatamapp_field"."actual_name", "radhatamapp_field"."name", "radhatamapp_field"."main", "radhatamapp_field"."type", "radhatamapp_field"."child_entity_id", "radhatamapp_field"."child_field_id", "radhatamapp_field"."is_derived_column", "radhatamapp_field"."derived_level" FROM "radhatamapp_field" WHERE "radhatamapp_field"."entity_id" = 11 LIMIT 21
2023-02-06 02:11:13.694 IST [18480] ERROR:  column radhatamapp_field.derived_level does not exist at character 304
2023-02-06 02:11:13.694 IST [18480] STATEMENT:  SELECT "radhatamapp_field"."id", "radhatamapp_field"."entity_id", "radhatamapp_field"."actual_name", "radhatamapp_field"."name", "radhatamapp_field"."main", "radhatamapp_field"."type", "radhatamapp_field"."child_entity_id", "radhatamapp_field"."child_field_id", "radhatamapp_field"."is_derived_column", "radhatamapp_field"."derived_level" FROM "radhatamapp_field" WHERE "radhatamapp_field"."entity_id" = 11 LIMIT 21
2023-02-06 02:11:13.694 IST [18480] ERROR:  column radhatamapp_field.derived_level does not exist at character 304
2023-02-06 02:11:13.694 IST [18480] STATEMENT:  SELECT "radhatamapp_field"."id", "radhatamapp_field"."entity_id", "radhatamapp_field"."actual_name", "radhatamapp_field"."name", "radhatamapp_field"."main", "radhatamapp_field"."type", "radhatamapp_field"."child_entity_id", "radhatamapp_field"."child_field_id", "radhatamapp_field"."is_derived_column", "radhatamapp_field"."derived_level" FROM "radhatamapp_field" WHERE "radhatamapp_field"."entity_id" = 11 LIMIT 21
2023-02-06 02:11:13.695 IST [18480] ERROR:  column radhatamapp_field.derived_level does not exist at character 304
2023-02-06 02:11:13.695 IST [18480] STATEMENT:  SELECT "radhatamapp_field"."id", "radhatamapp_field"."entity_id", "radhatamapp_field"."actual_name", "radhatamapp_field"."name", "radhatamapp_field"."main", "radhatamapp_field"."type", "radhatamapp_field"."child_entity_id", "radhatamapp_field"."child_field_id", "radhatamapp_field"."is_derived_column", "radhatamapp_field"."derived_level" FROM "radhatamapp_field" WHERE "radhatamapp_field"."entity_id" = 11 LIMIT 21
2023-02-06 02:11:28.745 IST [12460] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:11:59.168 IST [10760] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:12:08.718 IST [18744] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:12:42.397 IST [12308] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:12:54.185 IST [7120] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:13:34.213 IST [21992] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:13:48.055 IST [21848] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:13:56.850 IST [5392] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:14:02.347 IST [19400] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:14:10.967 IST [1640] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:14:26.489 IST [13340] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:23:02.379 IST [11740] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:23:13.045 IST [19384] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:24:40.553 IST [19940] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:25:51.012 IST [10500] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:28:59.624 IST [20964] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:29:21.662 IST [13244] LOG:  server process (PID 22324) was terminated by exception 0xC000013A
2023-02-06 02:29:21.662 IST [13244] DETAIL:  Failed process was running: select scrip_code,company,isin_no,close_price,sc_name,sc_group,sc_type,tdcloindi,sc_code,open,high,low,close,last,prevclose,no_trades,no_of_shrs,net_turnov from sensex left join bhavcopy on sensex.scrip_code = bhavcopy.sc_code

	

	limit 100
2023-02-06 02:29:21.662 IST [13244] HINT:  See C include file "ntstatus.h" for a description of the hexadecimal value.
2023-02-06 02:29:21.662 IST [13244] LOG:  terminating any other active server processes
2023-02-06 02:29:21.676 IST [13244] LOG:  statistics collector process (PID 11708) was terminated by exception 0xC000013A
2023-02-06 02:29:21.676 IST [13244] HINT:  See C include file "ntstatus.h" for a description of the hexadecimal value.
2023-02-06 02:29:21.677 IST [13244] LOG:  received fast shutdown request
^C2023-02-06 02:31:05.505 IST [15220] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-06 02:31:05.514 IST [15220] LOG:  listening on IPv6 address "::1", port 5432
2023-02-06 02:31:05.520 IST [15220] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-06 02:31:05.562 IST [16288] LOG:  database system was interrupted; last known up at 2023-02-06 02:14:58 IST
2023-02-06 02:31:05.845 IST [16288] LOG:  database system was not properly shut down; automatic recovery in progress
2023-02-06 02:31:05.849 IST [16288] LOG:  redo starts at 0/2AD58430
2023-02-06 02:31:05.849 IST [16288] LOG:  invalid record length at 0/2AD58518: wanted 24, got 0
2023-02-06 02:31:05.849 IST [16288] LOG:  redo done at 0/2AD584E0 system usage: CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s
2023-02-06 02:31:05.925 IST [15220] LOG:  database system is ready to accept connections
2023-02-06 02:31:18.919 IST [15220] LOG:  received fast shutdown request
2023-02-06 02:31:18.922 IST [15220] LOG:  aborting any active transactions
2023-02-06 02:31:18.927 IST [15220] LOG:  background worker "logical replication launcher" (PID 8164) exited with exit code 1
2023-02-06 02:31:18.943 IST [9616] LOG:  shutting down
2023-02-06 02:31:18.981 IST [15220] LOG:  database system is shut down
2023-02-06 02:31:19.209 IST [10168] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-06 02:31:19.217 IST [10168] LOG:  listening on IPv6 address "::1", port 5432
2023-02-06 02:31:19.223 IST [10168] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-06 02:31:19.277 IST [3776] LOG:  database system was shut down at 2023-02-06 02:31:18 IST
2023-02-06 02:31:19.343 IST [10168] LOG:  database system is ready to accept connections
2023-02-06 02:32:20.413 IST [19364] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:34:01.577 IST [10168] LOG:  server process (PID 21464) was terminated by exception 0xC000013A
2023-02-06 02:34:01.577 IST [10168] DETAIL:  Failed process was running: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity != '' OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 99342 AS oid , 3 AS attnum UNION ALL SELECT 99342, 1 UNION ALL SELECT 99342, 2 UNION ALL SELECT 99342, 4 UNION ALL SELECT 99347, 1 UNION ALL SELECT 99347, 2 UNION ALL SELECT 99347, 3 UNION ALL SELECT 99347, 4 UNION ALL SELECT 99347, 5 UNION ALL SELECT 99347, 6 UNION ALL SELECT 99347, 7 UNION ALL SELECT 99347, 8 UNION ALL SELECT 99347, 9 UNION ALL SELECT 99347, 10 UNION ALL SELECT 99347, 11 UNION ALL SELECT 99347, 12 UNION ALL SELECT 99347, 13 UNION ALL SELECT 99347, 14) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum) 
2023-02-06 02:34:01.577 IST [10168] HINT:  See C include file "ntstatus.h" for a description of the hexadecimal value.
2023-02-06 02:34:01.577 IST [10168] LOG:  terminating any other active server processes
2023-02-06 02:34:01.603 IST [10168] LOG:  statistics collector process (PID 4148) was terminated by exception 0xC000013A
2023-02-06 02:34:01.603 IST [10168] HINT:  See C include file "ntstatus.h" for a description of the hexadecimal value.
2023-02-06 02:34:01.603 IST [10168] LOG:  all server processes terminated; reinitializing
^C2023-02-06 02:35:56.258 IST [18004] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-06 02:35:56.268 IST [18004] LOG:  listening on IPv6 address "::1", port 5432
2023-02-06 02:35:56.275 IST [18004] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-06 02:35:56.317 IST [5216] LOG:  database system was interrupted; last known up at 2023-02-06 02:31:19 IST
2023-02-06 02:35:56.631 IST [5216] LOG:  database system was not properly shut down; automatic recovery in progress
2023-02-06 02:35:56.635 IST [5216] LOG:  redo starts at 0/2AD58608
2023-02-06 02:35:56.635 IST [5216] LOG:  invalid record length at 0/2AD58640: wanted 24, got 0
2023-02-06 02:35:56.635 IST [5216] LOG:  redo done at 0/2AD58608 system usage: CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s
2023-02-06 02:35:56.728 IST [18004] LOG:  database system is ready to accept connections
2023-02-06 02:38:12.673 IST [21600] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-02-06 02:43:11.607 IST [18004] LOG:  server process (PID 1708) was terminated by exception 0xC000013A
2023-02-06 02:43:11.607 IST [18004] DETAIL:  Failed process was running: SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"
2023-02-06 02:43:11.607 IST [18004] HINT:  See C include file "ntstatus.h" for a description of the hexadecimal value.
2023-02-06 02:43:11.608 IST [18004] LOG:  terminating any other active server processes
2023-02-06 02:43:11.632 IST [18004] LOG:  statistics collector process (PID 19100) was terminated by exception 0xC000013A
2023-02-06 02:43:11.632 IST [18004] HINT:  See C include file "ntstatus.h" for a description of the hexadecimal value.
2023-02-06 02:43:11.632 IST [18004] LOG:  all server processes terminated; reinitializing
^C2023-02-10 20:28:25.943 IST [4108] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-10 20:28:25.951 IST [4108] LOG:  listening on IPv6 address "::1", port 5432
2023-02-10 20:28:25.957 IST [4108] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-10 20:28:26.001 IST [18020] LOG:  database system was shut down at 2023-02-10 20:24:23 IST
2023-02-10 20:28:26.039 IST [4108] LOG:  database system is ready to accept connections
2023-02-10 22:31:16.308 IST [4340] ERROR:  NameError: name 'table_name' is not defined
2023-02-10 22:31:16.308 IST [4340] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "test", line 6, in <module>
	    WHERE table_name = '{table_name}' AND table_schema = 'public';
	PL/Python function "test"
2023-02-10 22:31:16.308 IST [4340] STATEMENT:  
	select test()
	
2023-02-10 22:31:41.742 IST [4340] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-10 22:31:41.742 IST [4340] STATEMENT:  SELECT x.oid,x.relname,x.relnamespace,x.relkind FROM pg_catalog.pg_class x WHERE x.relkind in('r','v','m') AND x.relname ILIKE $1  AND x.relnamespace IN ($2,$3) ORDER BY x.relname LIMIT 10
2023-02-10 22:31:44.412 IST [4340] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-10 22:31:44.412 IST [4340] STATEMENT:  
	
	CREATE or replace FUNCTION test(table_name text)
	  RETURNS text
	AS $$
	
	sql = f'''
	        SELECT * from {table_name};
	    '''
	res = plpy.execute(sql)
	return res
	
	col_dict = {}
	for r in res:
		col_dict[r['column_name']] = r['data_type']
	return col_dict
		
	$$ LANGUAGE plpython3u
2023-02-10 23:30:39.259 IST [4764] ERROR:  syntax error at or near "where" at character 68
2023-02-10 23:30:39.259 IST [4764] STATEMENT:  select trade_date,close_price from sensex_meta order by trade_date where scrip_code=507685
2023-02-11 00:18:58.095 IST [4108] LOG:  received fast shutdown request
2023-02-11 00:18:58.099 IST [4108] LOG:  aborting any active transactions
2023-02-11 00:18:58.099 IST [4340] FATAL:  terminating connection due to administrator command
2023-02-11 00:18:58.120 IST [4108] LOG:  background worker "logical replication launcher" (PID 16740) exited with exit code 1
2023-02-11 00:18:58.123 IST [11272] LOG:  shutting down
2023-02-11 00:18:58.174 IST [4108] LOG:  database system is shut down
2023-02-11 01:44:20.112 IST [16716] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-11 01:44:20.120 IST [16716] LOG:  listening on IPv6 address "::1", port 5432
2023-02-11 01:44:20.126 IST [16716] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-11 01:44:20.170 IST [10908] LOG:  database system was shut down at 2023-02-11 01:44:19 IST
2023-02-11 01:44:20.230 IST [16716] LOG:  database system is ready to accept connections
2023-02-11 01:44:42.847 IST [16716] LOG:  received fast shutdown request
2023-02-11 01:44:42.857 IST [16716] LOG:  aborting any active transactions
2023-02-11 01:44:42.858 IST [9300] FATAL:  terminating connection due to administrator command
2023-02-11 01:44:42.879 IST [16716] LOG:  background worker "logical replication launcher" (PID 7792) exited with exit code 1
2023-02-11 01:44:42.880 IST [1844] LOG:  shutting down
2023-02-11 01:44:42.957 IST [16716] LOG:  database system is shut down
2023-02-11 01:44:43.140 IST [4160] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-11 01:44:43.148 IST [4160] LOG:  listening on IPv6 address "::1", port 5432
2023-02-11 01:44:43.154 IST [4160] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-11 01:44:43.198 IST [12076] LOG:  database system was shut down at 2023-02-11 01:44:42 IST
2023-02-11 01:44:43.271 IST [4160] LOG:  database system is ready to accept connections
2023-02-11 01:44:51.607 IST [13256] ERROR:  cannot change return type of existing function
2023-02-11 01:44:51.607 IST [13256] HINT:  Use DROP FUNCTION line_plot(text,text,text[],text) first.
2023-02-11 01:44:51.607 IST [13256] STATEMENT:  CREATE or replace FUNCTION line_plot(table_name text, x_axis_column_name text, y_axis_column_name text[], x_axis_column_dtype text )
	  RETURNS bytea
	AS $$
	# import base64
	import matplotlib.dates
	from datetime import datetime
	import matplotlib.pyplot as plt
	import numpy as np
	from io import BytesIO
	import matplotlib as mpl
	mpl.use('Agg')
	
	plt.rcParams["figure.figsize"] = [7.50, 3.50]
	plt.rcParams["figure.autolayout"] = True
	
	
	order_by_sql = f"order by {x_axis_column_name}" if x_axis_column_dtype == 'date' else ''
	sql = f"select {x_axis_column_name},{','.join(y_axis_column_name)} from {table_name}  where scrip_code = 532215 {order_by_sql}"
	
	res = plpy.execute(sql)
	xaxis = []
	if x_axis_column_dtype == 'date':
	    for row in res:
	        dstr = row[x_axis_column_name]
	        ddate = datetime.strptime(dstr, '%Y-%m-%d')
	        xaxis.append(ddate)
	
	
	# print(xaxis)
	
	for col in y_axis_column_name:
	    yaxis = []
	    for row in res:
	        d = row[col]
	        yaxis.append(d)
	    plt.plot(xaxis, yaxis, label=col)
	
	plt.xlabel(x_axis_column_name)
	plt.ylabel("Close Params")
	plt.title("Simple Plot")
	plt.legend()
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	return image_png
	
	# graphic = base64.b64encode(image_png)
	# graphic = graphic.decode('utf-8')
	
	# return graphic
	
	$$ LANGUAGE plpython3u
2023-02-11 01:44:57.961 IST [13256] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 01:44:57.961 IST [13256] STATEMENT:  drop function line_plot(text,text, text[],text)
2023-02-11 01:45:00.366 IST [4160] LOG:  received fast shutdown request
2023-02-11 01:45:00.369 IST [4160] LOG:  aborting any active transactions
2023-02-11 01:45:00.370 IST [13256] FATAL:  terminating connection due to administrator command
2023-02-11 01:45:00.394 IST [4160] LOG:  background worker "logical replication launcher" (PID 10160) exited with exit code 1
2023-02-11 01:45:00.396 IST [14204] LOG:  shutting down
2023-02-11 01:45:00.472 IST [4160] LOG:  database system is shut down
2023-02-11 01:45:00.659 IST [16120] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-11 01:45:00.667 IST [16120] LOG:  listening on IPv6 address "::1", port 5432
2023-02-11 01:45:00.673 IST [16120] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-11 01:45:00.722 IST [15292] LOG:  database system was shut down at 2023-02-11 01:45:00 IST
2023-02-11 01:45:00.793 IST [16120] LOG:  database system is ready to accept connections
2023-02-11 01:45:05.643 IST [13568] ERROR:  cannot change return type of existing function
2023-02-11 01:45:05.643 IST [13568] HINT:  Use DROP FUNCTION line_plot(text,text,text[],text) first.
2023-02-11 01:45:05.643 IST [13568] STATEMENT:  CREATE or replace FUNCTION line_plot(table_name text, x_axis_column_name text, y_axis_column_name text[], x_axis_column_dtype text )
	  RETURNS bytea
	AS $$
	# import base64
	import matplotlib.dates
	from datetime import datetime
	import matplotlib.pyplot as plt
	import numpy as np
	from io import BytesIO
	import matplotlib as mpl
	mpl.use('Agg')
	
	plt.rcParams["figure.figsize"] = [7.50, 3.50]
	plt.rcParams["figure.autolayout"] = True
	
	
	order_by_sql = f"order by {x_axis_column_name}" if x_axis_column_dtype == 'date' else ''
	sql = f"select {x_axis_column_name},{','.join(y_axis_column_name)} from {table_name}  where scrip_code = 532215 {order_by_sql}"
	
	res = plpy.execute(sql)
	xaxis = []
	if x_axis_column_dtype == 'date':
	    for row in res:
	        dstr = row[x_axis_column_name]
	        ddate = datetime.strptime(dstr, '%Y-%m-%d')
	        xaxis.append(ddate)
	
	
	# print(xaxis)
	
	for col in y_axis_column_name:
	    yaxis = []
	    for row in res:
	        d = row[col]
	        yaxis.append(d)
	    plt.plot(xaxis, yaxis, label=col)
	
	plt.xlabel(x_axis_column_name)
	plt.ylabel("Close Params")
	plt.title("Simple Plot")
	plt.legend()
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	return image_png
	
	# graphic = base64.b64encode(image_png)
	# graphic = graphic.decode('utf-8')
	
	# return graphic
	
	$$ LANGUAGE plpython3u
	
	
2023-02-11 01:45:20.512 IST [13568] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 01:45:20.512 IST [13568] STATEMENT:  drop function line_plot(text,text, text[],text)
2023-02-11 01:45:21.893 IST [13568] ERROR:  function line_plot(text, text, text[], text) does not exist
2023-02-11 01:45:21.893 IST [13568] STATEMENT:  drop function line_plot(text,text, text[],text)
2023-02-11 01:45:35.375 IST [13568] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 01:45:35.375 IST [13568] STATEMENT:  CREATE or replace FUNCTION line_plot(table_name text, x_axis_column_name text, y_axis_column_name text[], x_axis_column_dtype text )
	  RETURNS bytea
	AS $$
	# import base64
	import matplotlib.dates
	from datetime import datetime
	import matplotlib.pyplot as plt
	import numpy as np
	from io import BytesIO
	import matplotlib as mpl
	mpl.use('Agg')
	
	plt.rcParams["figure.figsize"] = [7.50, 3.50]
	plt.rcParams["figure.autolayout"] = True
	
	
	order_by_sql = f"order by {x_axis_column_name}" if x_axis_column_dtype == 'date' else ''
	sql = f"select {x_axis_column_name},{','.join(y_axis_column_name)} from {table_name}  where scrip_code = 532215 {order_by_sql}"
	
	res = plpy.execute(sql)
	xaxis = []
	if x_axis_column_dtype == 'date':
	    for row in res:
	        dstr = row[x_axis_column_name]
	        ddate = datetime.strptime(dstr, '%Y-%m-%d')
	        xaxis.append(ddate)
	
	
	# print(xaxis)
	
	for col in y_axis_column_name:
	    yaxis = []
	    for row in res:
	        d = row[col]
	        yaxis.append(d)
	    plt.plot(xaxis, yaxis, label=col)
	
	plt.xlabel(x_axis_column_name)
	plt.ylabel("Close Params")
	plt.title("Simple Plot")
	plt.legend()
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	return image_png
	
	# graphic = base64.b64encode(image_png)
	# graphic = graphic.decode('utf-8')
	
	# return graphic
	
	$$ LANGUAGE plpython3u
	
2023-02-11 01:45:35.379 IST [13568] ERROR:  cannot change return type of existing function
2023-02-11 01:45:35.379 IST [13568] HINT:  Use DROP FUNCTION line_plot(text,text,text[],text) first.
2023-02-11 01:45:35.379 IST [13568] STATEMENT:  CREATE or replace FUNCTION line_plot(table_name text, x_axis_column_name text, y_axis_column_name text[], x_axis_column_dtype text )
	  RETURNS bytea
	AS $$
	# import base64
	import matplotlib.dates
	from datetime import datetime
	import matplotlib.pyplot as plt
	import numpy as np
	from io import BytesIO
	import matplotlib as mpl
	mpl.use('Agg')
	
	plt.rcParams["figure.figsize"] = [7.50, 3.50]
	plt.rcParams["figure.autolayout"] = True
	
	
	order_by_sql = f"order by {x_axis_column_name}" if x_axis_column_dtype == 'date' else ''
	sql = f"select {x_axis_column_name},{','.join(y_axis_column_name)} from {table_name}  where scrip_code = 532215 {order_by_sql}"
	
	res = plpy.execute(sql)
	xaxis = []
	if x_axis_column_dtype == 'date':
	    for row in res:
	        dstr = row[x_axis_column_name]
	        ddate = datetime.strptime(dstr, '%Y-%m-%d')
	        xaxis.append(ddate)
	
	
	# print(xaxis)
	
	for col in y_axis_column_name:
	    yaxis = []
	    for row in res:
	        d = row[col]
	        yaxis.append(d)
	    plt.plot(xaxis, yaxis, label=col)
	
	plt.xlabel(x_axis_column_name)
	plt.ylabel("Close Params")
	plt.title("Simple Plot")
	plt.legend()
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	return image_png
	
	# graphic = base64.b64encode(image_png)
	# graphic = graphic.decode('utf-8')
	
	# return graphic
	
	$$ LANGUAGE plpython3u
	
2023-02-11 01:45:47.349 IST [13568] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 01:45:47.349 IST [13568] STATEMENT:  SELECT p.oid,p.*,pg_catalog.pg_get_expr(p.proargdefaults, 0) as arg_defaults,d.description
	FROM pg_catalog.pg_proc p
	LEFT OUTER JOIN pg_catalog.pg_description d ON d.objoid=p.oid
	WHERE p.pronamespace=$1
	ORDER BY p.proname
2023-02-11 01:53:00.469 IST [16120] LOG:  received fast shutdown request
2023-02-11 01:53:00.472 IST [16120] LOG:  aborting any active transactions
2023-02-11 01:53:00.473 IST [13568] FATAL:  terminating connection due to administrator command
2023-02-11 01:53:00.492 IST [16120] LOG:  background worker "logical replication launcher" (PID 12364) exited with exit code 1
2023-02-11 01:53:00.501 IST [16388] LOG:  shutting down
2023-02-11 01:53:00.555 IST [16120] LOG:  database system is shut down
2023-02-11 01:53:00.760 IST [12032] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-11 01:53:00.767 IST [12032] LOG:  listening on IPv6 address "::1", port 5432
2023-02-11 01:53:00.773 IST [12032] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-11 01:53:00.819 IST [15120] LOG:  database system was shut down at 2023-02-11 01:53:00 IST
2023-02-11 01:53:00.904 IST [12032] LOG:  database system is ready to accept connections
<string>:44: UserWarning: Tight layout not applied. The bottom and top margins cannot be made large enough to accommodate all axes decorations. 
<string>:44: UserWarning: Tight layout not applied. The bottom and top margins cannot be made large enough to accommodate all axes decorations. 
2023-02-11 01:56:52.627 IST [14852] ERROR:  function line_plot(unknown, unknown, unknown, unknown) does not exist at character 8
2023-02-11 01:56:52.627 IST [14852] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-02-11 01:56:52.627 IST [14852] STATEMENT:  select line_plot('sensex_meta','trade_date', '{"close","sma50"}','date')
2023-02-11 01:57:00.157 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 01:57:00.157 IST [14852] STATEMENT:  
	CREATE or replace FUNCTION line_plot(table_name text, x_axis_column_name text, y_axis_column_name text[], x_axis_column_dtype text )
	  RETURNS bytea
	AS $$
	# import base64
	import matplotlib.dates
	from datetime import datetime
	import matplotlib.pyplot as plt
	import numpy as np
	from io import BytesIO
	import matplotlib as mpl
	mpl.use('Agg')
	
	plt.rcParams["figure.figsize"] = [7.50, 3.50]
	plt.rcParams["figure.autolayout"] = True
	
	
	order_by_sql = f"order by {x_axis_column_name}" if x_axis_column_dtype == 'date' else ''
	sql = f"select {x_axis_column_name},{','.join(y_axis_column_name)} from {table_name}  where scrip_code = 532215 {order_by_sql}"
	
	res = plpy.execute(sql)
	xaxis = []
	if x_axis_column_dtype == 'date':
	    for row in res:
	        dstr = row[x_axis_column_name]
	        ddate = datetime.strptime(dstr, '%Y-%m-%d')
	        xaxis.append(ddate)
	
	
	# print(xaxis)
	
	for col in y_axis_column_name:
	    yaxis = []
	    for row in res:
	        d = row[col]
	        yaxis.append(d)
	    plt.plot(xaxis, yaxis, label=col)
	
	plt.xlabel(x_axis_column_name)
	plt.ylabel("Close Params")
	plt.title("Simple Plot")
	plt.legend()
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	plt.figure().clear()
	plt.close()
	
	
	return image_png
	
	# graphic = base64.b64encode(image_png)
	# graphic = graphic.decode('utf-8')
	
	# return graphic
	
	$$ LANGUAGE plpython3u
2023-02-11 02:08:43.027 IST [14852] ERROR:  NameError: name 'plt' is not defined
2023-02-11 02:08:43.027 IST [14852] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "line_plot", line 9, in <module>
	    plt.rcParams["figure.figsize"] = [7.50, 3.50]
	PL/Python function "line_plot"
2023-02-11 02:08:43.027 IST [14852] STATEMENT:  select line_plot('sensex_meta','trade_date', '{"close","sma50"}','date')
2023-02-11 02:09:04.274 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:09:04.274 IST [14852] STATEMENT:  CREATE or replace FUNCTION line_plot(table_name text, x_axis_column_name text, y_axis_column_name text[], x_axis_column_dtype text )
	  RETURNS bytea
	AS $$
	# import base64
	import matplotlib.dates
	from datetime import datetime
	import matplotlib.pyplot as plt
	import numpy as np
	from io import BytesIO
	import matplotlib as mpl
	mpl.use('Agg')
	
	plt.rcParams["figure.figsize"] = [7.50, 3.50]
	plt.rcParams["figure.autolayout"] = True
	
	
	order_by_sql = f"order by {x_axis_column_name}" if x_axis_column_dtype == 'date' else ''
	sql = f"select {x_axis_column_name},{','.join(y_axis_column_name)} from {table_name}  where scrip_code = 532215 {order_by_sql}"
	
	res = plpy.execute(sql)
	xaxis = []
	if x_axis_column_dtype == 'date':
	    for row in res:
	        dstr = row[x_axis_column_name]
	        ddate = datetime.strptime(dstr, '%Y-%m-%d')
	        xaxis.append(ddate)
	
	
	# print(xaxis)
	
	for col in y_axis_column_name:
	    yaxis = []
	    for row in res:
	        d = row[col]
	        yaxis.append(d)
	    plt.plot(xaxis, yaxis, label=col)
	
	plt.xlabel(x_axis_column_name)
	plt.ylabel("Close Params")
	plt.title("Simple Plot")
	plt.legend()
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	plt.figure().clear()
	plt.close()
	
	
	return image_png
	
	# graphic = base64.b64encode(image_png)
	# graphic = graphic.decode('utf-8')
	
	# return graphic
	
	$$ LANGUAGE plpython3u
<string>:44: UserWarning: Tight layout not applied. The bottom and top margins cannot be made large enough to accommodate all axes decorations. 
2023-02-11 02:17:53.300 IST [14852] ERROR:  TypeError: __init__() got an unexpected keyword argument 'layout'
2023-02-11 02:17:53.300 IST [14852] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "test_plot", line 12, in <module>
	    fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')
	  PL/Python function "test_plot", line 470, in wrapper
	  PL/Python function "test_plot", line 1438, in subplots
	  PL/Python function "test_plot", line 796, in figure
	  PL/Python function "test_plot", line 315, in new_figure_manager
	  PL/Python function "test_plot", line 3543, in new_figure_manager
	PL/Python function "test_plot"
2023-02-11 02:17:53.300 IST [14852] STATEMENT:  select test_plot()
2023-02-11 02:18:22.791 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:18:22.791 IST [14852] STATEMENT:  CREATE or replace FUNCTION test_plot()
	  RETURNS bytea
	AS $$
	import matplotlib as mpl
	import matplotlib.pyplot as plt
	import numpy as np
	
	from io import BytesIO
	mpl.use('Agg')
	
	x = np.linspace(0, 2, 100)  # Sample data.
	
	# Note that even in the OO-style, we use `.pyplot.figure` to create the Figure.
	fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')
	ax.plot(x, x, label='linear')  # Plot some data on the axes.
	ax.plot(x, x**2, label='quadratic')  # Plot more data on the axes...
	ax.plot(x, x**3, label='cubic')  # ... and some more.
	ax.set_xlabel('x label')  # Add an x-label to the axes.
	ax.set_ylabel('y label')  # Add a y-label to the axes.
	ax.set_title("Simple Plot")  # Add a title to the axes.
	ax.legend();  
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	plt.figure().clear()
	plt.close()
	
	
	return image_png
	
	$$ LANGUAGE plpython3u
	
2023-02-11 02:18:24.903 IST [14852] ERROR:  TypeError: __init__() got an unexpected keyword argument 'layout'
2023-02-11 02:18:24.903 IST [14852] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "test_plot", line 12, in <module>
	    fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')
	  PL/Python function "test_plot", line 470, in wrapper
	  PL/Python function "test_plot", line 1438, in subplots
	  PL/Python function "test_plot", line 796, in figure
	  PL/Python function "test_plot", line 315, in new_figure_manager
	  PL/Python function "test_plot", line 3543, in new_figure_manager
	PL/Python function "test_plot"
2023-02-11 02:18:24.903 IST [14852] STATEMENT:  select test_plot()
2023-02-11 02:18:41.038 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:18:41.038 IST [14852] STATEMENT:  
	
	
	CREATE or replace FUNCTION test_plot()
	  RETURNS bytea
	AS $$
	import matplotlib as mpl
	import matplotlib.pyplot as plt
	import numpy as np
	
	from io import BytesIO
	mpl.use('Agg')
	
	x = np.linspace(0, 2, 100)  # Sample data.
	
	# Note that even in the OO-style, we use `.pyplot.figure` to create the Figure.
	#fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')
	ax.plot(x, x, label='linear')  # Plot some data on the axes.
	ax.plot(x, x**2, label='quadratic')  # Plot more data on the axes...
	ax.plot(x, x**3, label='cubic')  # ... and some more.
	ax.set_xlabel('x label')  # Add an x-label to the axes.
	ax.set_ylabel('y label')  # Add a y-label to the axes.
	ax.set_title("Simple Plot")  # Add a title to the axes.
	ax.legend();  
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	plt.figure().clear()
	plt.close()
	
	
	return image_png
	
	$$ LANGUAGE plpython3u
	
	
2023-02-11 02:18:42.768 IST [14852] ERROR:  NameError: name 'ax' is not defined
2023-02-11 02:18:42.768 IST [14852] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "test_plot", line 13, in <module>
	    ax.plot(x, x, label='linear')  # Plot some data on the axes.
	PL/Python function "test_plot"
2023-02-11 02:18:42.768 IST [14852] STATEMENT:  select test_plot()
2023-02-11 02:19:05.802 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:19:05.802 IST [14852] STATEMENT:  SELECT x.oid,x.relname,x.relnamespace,x.relkind FROM pg_catalog.pg_class x WHERE x.relkind in('r','v','m') AND x.relname ILIKE $1  AND x.relnamespace IN ($2,$3) ORDER BY x.relname LIMIT 10
2023-02-11 02:19:05.921 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:19:05.921 IST [14852] STATEMENT:  SELECT x.oid,x.relname,x.relnamespace,x.relkind FROM pg_catalog.pg_class x WHERE x.relkind in('r','v','m') AND x.relname ILIKE $1  AND x.relnamespace IN ($2,$3) ORDER BY x.relname LIMIT 10
2023-02-11 02:19:06.044 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:19:06.044 IST [14852] STATEMENT:  SELECT x.oid,x.relname,x.relnamespace,x.relkind FROM pg_catalog.pg_class x WHERE x.relkind in('r','v','m') AND x.relname ILIKE $1  AND x.relnamespace IN ($2,$3) ORDER BY x.relname LIMIT 10
2023-02-11 02:19:07.857 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:19:07.857 IST [14852] STATEMENT:  SELECT x.oid,x.relname,x.relnamespace,x.relkind FROM pg_catalog.pg_class x WHERE x.relkind in('r','v','m') AND x.relname ILIKE $1  AND x.relnamespace IN ($2,$3) ORDER BY x.relname LIMIT 10
2023-02-11 02:19:11.761 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:19:11.761 IST [14852] STATEMENT:  
	CREATE or replace FUNCTION test_plot()
	  RETURNS bytea
	AS $$
	import matplotlib as mpl
	import matplotlib.pyplot as plt
	import numpy as np
	
	from io import BytesIO
	mpl.use('Agg')
	
	x = np.linspace(0, 2, 100)  # Sample data.
	
	fig = plt.figure()  # an empty figure with no Axes
	fig, ax = plt.subplots()  # a figure with a single Axes
	fig, axs = plt.subplots(2, 2)  # a figure with a 2x2 grid of Axes
	
	# Note that even in the OO-style, we use `.pyplot.figure` to create the Figure.
	#fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')
	ax.plot(x, x, label='linear')  # Plot some data on the axes.
	ax.plot(x, x**2, label='quadratic')  # Plot more data on the axes...
	ax.plot(x, x**3, label='cubic')  # ... and some more.
	ax.set_xlabel('x label')  # Add an x-label to the axes.
	ax.set_ylabel('y label')  # Add a y-label to the axes.
	ax.set_title("Simple Plot")  # Add a title to the axes.
	ax.legend();  
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	plt.figure().clear()
	plt.close()
	
	
	return image_png
	
	$$ LANGUAGE plpython3u
2023-02-11 02:20:02.751 IST [14852] ERROR:  NameError: name 'ax' is not defined
2023-02-11 02:20:02.751 IST [14852] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "test_plot", line 13, in <module>
	    ax.plot(x, x, label='linear')  # Plot some data on the axes.
	PL/Python function "test_plot"
2023-02-11 02:20:02.751 IST [14852] STATEMENT:  select test_plot()
2023-02-11 02:20:24.385 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:20:24.385 IST [14852] STATEMENT:  
	
	
	
	CREATE or replace FUNCTION test_plot()
	  RETURNS bytea
	AS $$
	import matplotlib as mpl
	import matplotlib.pyplot as plt
	import numpy as np
	
	from io import BytesIO
	mpl.use('Agg')
	
	x = np.linspace(0, 2, 100)  # Sample data.
	
	# Note that even in the OO-style, we use `.pyplot.figure` to create the Figure.
	fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')
	ax.plot(x, x, label='linear')  # Plot some data on the axes.
	ax.plot(x, x**2, label='quadratic')  # Plot more data on the axes...
	ax.plot(x, x**3, label='cubic')  # ... and some more.
	ax.set_xlabel('x label')  # Add an x-label to the axes.
	ax.set_ylabel('y label')  # Add a y-label to the axes.
	ax.set_title("Simple Plot")  # Add a title to the axes.
	ax.legend();  
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	plt.figure().clear()
	plt.close()
	
	
	return image_png
	
	$$ LANGUAGE plpython3u
	
2023-02-11 02:20:31.407 IST [14852] ERROR:  TypeError: __init__() got an unexpected keyword argument 'layout'
2023-02-11 02:20:31.407 IST [14852] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "test_plot", line 12, in <module>
	    fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')
	  PL/Python function "test_plot", line 470, in wrapper
	  PL/Python function "test_plot", line 1438, in subplots
	  PL/Python function "test_plot", line 796, in figure
	  PL/Python function "test_plot", line 315, in new_figure_manager
	  PL/Python function "test_plot", line 3543, in new_figure_manager
	PL/Python function "test_plot"
2023-02-11 02:20:31.407 IST [14852] STATEMENT:  select test_plot()
2023-02-11 02:21:07.209 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:21:07.209 IST [14852] STATEMENT:  CREATE or replace FUNCTION test_plot()
	  RETURNS bytea
	AS $$
	import matplotlib as mpl
	import matplotlib.pyplot as plt
	import numpy as np
	
	from io import BytesIO
	mpl.use('Agg')
	
	plt.figure(figsize=(5, 2.7), layout='constrained')
	
	x = np.linspace(0, 2, 100)  # Sample data.
	
	# Note that even in the OO-style, we use `.pyplot.figure` to create the Figure.
	fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')
	ax.plot(x, x, label='linear')  # Plot some data on the axes.
	ax.plot(x, x**2, label='quadratic')  # Plot more data on the axes...
	ax.plot(x, x**3, label='cubic')  # ... and some more.
	ax.set_xlabel('x label')  # Add an x-label to the axes.
	ax.set_ylabel('y label')  # Add a y-label to the axes.
	ax.set_title("Simple Plot")  # Add a title to the axes.
	ax.legend();  
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	plt.figure().clear()
	plt.close()
	
	
	return image_png
	
	$$ LANGUAGE plpython3u
	
	
2023-02-11 02:21:09.070 IST [14852] ERROR:  TypeError: __init__() got an unexpected keyword argument 'layout'
2023-02-11 02:21:09.070 IST [14852] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "test_plot", line 9, in <module>
	    plt.figure(figsize=(5, 2.7), layout='constrained')
	  PL/Python function "test_plot", line 796, in figure
	  PL/Python function "test_plot", line 315, in new_figure_manager
	  PL/Python function "test_plot", line 3543, in new_figure_manager
	PL/Python function "test_plot"
2023-02-11 02:21:09.070 IST [14852] STATEMENT:  select test_plot()
2023-02-11 02:23:38.174 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:23:38.174 IST [14852] STATEMENT:  CREATE or replace FUNCTION line_plot(table_name text, x_axis_column_name text, y_axis_column_name text[], x_axis_column_dtype text )
	  RETURNS bytea
	AS $$
	# import base64
	import matplotlib.dates
	from datetime import datetime
	import matplotlib.pyplot as plt
	import numpy as np
	from io import BytesIO
	import matplotlib as mpl
	mpl.use('Agg')
	
	plt.rcParams["figure.figsize"] = [7.50, 3.50]
	plt.rcParams["figure.autolayout"] = True
	
	
	order_by_sql = f"order by {x_axis_column_name}" if x_axis_column_dtype == 'date' else ''
	sql = f"select {x_axis_column_name},{','.join(y_axis_column_name)} from {table_name}  where scrip_code = 532215 {order_by_sql}"
	
	res = plpy.execute(sql)
	xaxis = []
	if x_axis_column_dtype == 'date':
	    for row in res:
	        dstr = row[x_axis_column_name]
	        ddate = datetime.strptime(dstr, '%Y-%m-%d')
	        xaxis.append(ddate)
	
	
	# print(xaxis)
	
	for col in y_axis_column_name:
	    yaxis = []
	    for row in res:
	        d = row[col]
	        yaxis.append(d)
	    plt.plot(xaxis, yaxis, label=col)
	
	plt.xlabel(x_axis_column_name)
	plt.ylabel("Close Params")
	plt.title("Simple Plot")
	plt.legend()
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	plt.figure().clear()
	plt.close()
	
	
	return image_png
	
	# graphic = base64.b64encode(image_png)
	# graphic = graphic.decode('utf-8')
	
	# return graphic
	
	$$ LANGUAGE plpython3u
	
2023-02-11 02:26:35.883 IST [14852] ERROR:  function line_plot(text, text, text[], text) does not exist
2023-02-11 02:26:35.883 IST [14852] STATEMENT:  
	
	drop function line_plot(text,text, text[],text)
	
2023-02-11 02:26:39.243 IST [14852] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:26:39.243 IST [14852] STATEMENT:  CREATE or replace FUNCTION line_plot(table_name text, x_axis_column_name text, y_axis_column_name text[], x_axis_column_dtype text )
	  RETURNS bytea
	AS $$
	# import base64
	import matplotlib.dates
	from datetime import datetime
	import matplotlib.pyplot as plt
	import numpy as np
	from io import BytesIO
	import matplotlib as mpl
	mpl.use('Agg')
	
	plt.rcParams["figure.figsize"] = [7.50, 3.50]
	plt.rcParams["figure.autolayout"] = True
	
	
	order_by_sql = f"order by {x_axis_column_name}" if x_axis_column_dtype == 'date' else ''
	sql = f"select {x_axis_column_name},{','.join(y_axis_column_name)} from {table_name}  where scrip_code = 532215 {order_by_sql}"
	
	res = plpy.execute(sql)
	xaxis = []
	if x_axis_column_dtype == 'date':
	    for row in res:
	        dstr = row[x_axis_column_name]
	        ddate = datetime.strptime(dstr, '%Y-%m-%d')
	        xaxis.append(ddate)
	
	
	# print(xaxis)
	
	for col in y_axis_column_name:
	    yaxis = []
	    for row in res:
	        d = row[col]
	        yaxis.append(d)
	    plt.plot(xaxis, yaxis, label=col)
	
	plt.xlabel(x_axis_column_name)
	plt.ylabel("Close Params")
	plt.title("Simple Plot")
	plt.legend()
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	plt.figure().clear()
	plt.close()
	
	
	return image_png
	
	# graphic = base64.b64encode(image_png)
	# graphic = graphic.decode('utf-8')
	
	# return graphic
	
	$$ LANGUAGE plpython3u
	
	
	
2023-02-11 02:27:15.216 IST [12032] LOG:  received fast shutdown request
2023-02-11 02:27:15.221 IST [12032] LOG:  aborting any active transactions
2023-02-11 02:27:15.221 IST [14852] FATAL:  terminating connection due to administrator command
2023-02-11 02:27:15.225 IST [12032] LOG:  background worker "logical replication launcher" (PID 18156) exited with exit code 1
2023-02-11 02:27:15.244 IST [1920] LOG:  shutting down
2023-02-11 02:27:15.333 IST [12032] LOG:  database system is shut down
2023-02-11 02:27:15.623 IST [11772] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-11 02:27:15.631 IST [11772] LOG:  listening on IPv6 address "::1", port 5432
2023-02-11 02:27:15.637 IST [11772] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-11 02:27:15.682 IST [11480] LOG:  database system was shut down at 2023-02-11 02:27:15 IST
2023-02-11 02:27:15.723 IST [11772] LOG:  database system is ready to accept connections
2023-02-11 02:27:20.237 IST [17148] ERROR:  function line_plot(unknown, unknown, unknown, unknown) does not exist at character 8
2023-02-11 02:27:20.237 IST [17148] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-02-11 02:27:20.237 IST [17148] STATEMENT:  select line_plot('sensex_meta','trade_date', '{"close","sma50"}','date')
2023-02-11 02:27:24.142 IST [17148] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:27:24.142 IST [17148] STATEMENT:  SELECT n.oid,n.*,d.description FROM pg_catalog.pg_namespace n
	LEFT OUTER JOIN pg_catalog.pg_description d ON d.objoid=n.oid AND d.objsubid=0 AND d.classoid='pg_namespace'::regclass
	 WHERE nspname=$1 ORDER BY nspname
2023-02-11 02:29:00.320 IST [13376] ERROR:  NameError: name 'mpl' is not defined
2023-02-11 02:29:00.320 IST [13376] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "line_plot", line 5, in <module>
	    mpl.use('Agg')
	PL/Python function "line_plot"
2023-02-11 02:29:00.320 IST [13376] STATEMENT:  select line_plot('sensex_meta','trade_date', '{"close","sma50"}','date')
2023-02-11 02:29:16.591 IST [13376] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:29:16.591 IST [13376] STATEMENT:  
	
	drop function line_plot(text,text, text[],text)
2023-02-11 02:29:16.595 IST [13376] ERROR:  function line_plot(text, text, text[], text) does not exist
2023-02-11 02:29:16.595 IST [13376] STATEMENT:  
	
	drop function line_plot(text,text, text[],text)
2023-02-11 02:29:20.281 IST [13376] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:29:20.281 IST [13376] STATEMENT:  
	CREATE or replace FUNCTION line_plot(table_name text, x_axis_column_name text, y_axis_column_name text[], x_axis_column_dtype text )
	  RETURNS bytea
	AS $$
	# import base64
	
	import matplotlib as mpl
	mpl.use('Agg')
	
	from datetime import datetime
	import matplotlib.pyplot as plt
	import numpy as np
	from io import BytesIO
	
	plt.rcParams["figure.figsize"] = [7.50, 3.50]
	plt.rcParams["figure.autolayout"] = True
	
	
	order_by_sql = f"order by {x_axis_column_name}" if x_axis_column_dtype == 'date' else ''
	sql = f"select {x_axis_column_name},{','.join(y_axis_column_name)} from {table_name}  where scrip_code = 532215 {order_by_sql}"
	
	res = plpy.execute(sql)
	xaxis = []
	if x_axis_column_dtype == 'date':
	    for row in res:
	        dstr = row[x_axis_column_name]
	        ddate = datetime.strptime(dstr, '%Y-%m-%d')
	        xaxis.append(ddate)
	
	
	# print(xaxis)
	
	for col in y_axis_column_name:
	    yaxis = []
	    for row in res:
	        d = row[col]
	        yaxis.append(d)
	    plt.plot(xaxis, yaxis, label=col)
	
	plt.xlabel(x_axis_column_name)
	plt.ylabel("Close Params")
	plt.title("Simple Plot")
	plt.legend()
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	plt.figure().clear()
	plt.close()
	
	
	return image_png
	
	# graphic = base64.b64encode(image_png)
	# graphic = graphic.decode('utf-8')
	
	# return graphic
	
	$$ LANGUAGE plpython3u
2023-02-11 02:32:34.932 IST [13376] ERROR:  could not compile PL/Python function "line_plot"
2023-02-11 02:32:34.932 IST [13376] DETAIL:  TabError: inconsistent use of tabs and spaces in indentation (<string>, line 36)
2023-02-11 02:32:34.932 IST [13376] STATEMENT:  CREATE or replace FUNCTION line_plot(table_name text, x_axis_column_name text, y_axis_column_name text[], x_axis_column_dtype text )
	  RETURNS bytea
	AS $$
	# import base64
	
	import matplotlib as mpl
	mpl.use('Agg')
	
	from datetime import datetime
	import matplotlib.pyplot as plt
	import numpy as np
	from io import BytesIO
	
	plt.rcParams["figure.figsize"] = [7.50, 3.50]
	plt.rcParams["figure.autolayout"] = True
	
	
	order_by_sql = f"order by {x_axis_column_name}" if x_axis_column_dtype == 'date' else ''
	sql = f"select {x_axis_column_name},{','.join(y_axis_column_name)} from {table_name}  where scrip_code = 532215 {order_by_sql}"
	
	res = plpy.execute(sql)
	xaxis = []
	if x_axis_column_dtype == 'date':
	    for row in res:
	        dstr = row[x_axis_column_name]
	        ddate = datetime.strptime(dstr, '%Y-%m-%d')
	        xaxis.append(ddate)
	
	
	# print(xaxis)
	count = 0
	for col in y_axis_column_name:
	    yaxis = []
	    for row in res:
	        d = row[col]
	        yaxis.append(d)
		plt.figure(count)
		count += 1
	    plt.plot(xaxis, yaxis, label=col)
	
	plt.xlabel(x_axis_column_name)
	plt.ylabel("Close Params")
	plt.title("Simple Plot")
	plt.legend()
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	for i in range(count):
		plt.figure(i).clear()
	plt.close()
	
	
	return image_png
	
	# graphic = base64.b64encode(image_png)
	# graphic = graphic.decode('utf-8')
	
	# return graphic
	
	$$ LANGUAGE plpython3u
2023-02-11 02:33:47.373 IST [13376] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:33:47.373 IST [13376] STATEMENT:  
	drop function line_plot(text,text, text[],text)
2023-02-11 02:33:47.376 IST [13376] ERROR:  function line_plot(text, text, text[], text) does not exist
2023-02-11 02:33:47.376 IST [13376] STATEMENT:  
	drop function line_plot(text,text, text[],text)
2023-02-11 02:33:51.388 IST [13376] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-02-11 02:33:51.388 IST [13376] STATEMENT:  CREATE or replace FUNCTION line_plot(table_name text, x_axis_column_name text, y_axis_column_name text[], x_axis_column_dtype text )
	  RETURNS bytea
	AS $$
	# import base64
	
	from io import BytesIO
	import numpy as np
	import matplotlib.pyplot as plt
	from datetime import datetime
	import matplotlib as mpl
	mpl.use('Agg')
	
	
	plt.rcParams["figure.figsize"] = [7.50, 3.50]
	plt.rcParams["figure.autolayout"] = True
	
	
	order_by_sql = f"order by {x_axis_column_name}" if x_axis_column_dtype == 'date' else ''
	sql = f"select {x_axis_column_name},{','.join(y_axis_column_name)} from {table_name}  where scrip_code = 532215 {order_by_sql}"
	
	res = plpy.execute(sql)
	xaxis = []
	if x_axis_column_dtype == 'date':
	    for row in res:
	        dstr = row[x_axis_column_name]
	        ddate = datetime.strptime(dstr, '%Y-%m-%d')
	        xaxis.append(ddate)
	
	
	# print(xaxis)
	count = 0
	for col in y_axis_column_name:
	    yaxis = []
	    for row in res:
	        d = row[col]
	        yaxis.append(d)
	        plt.figure(count)
	        count += 1
	    plt.plot(xaxis, yaxis, label=col)
	
	plt.xlabel(x_axis_column_name)
	plt.ylabel("Close Params")
	plt.title("Simple Plot")
	plt.legend()
	
	
	buffer = BytesIO()
	plt.savefig(buffer, format="png")
	
	
	buffer.seek(0)
	image_png = buffer.getvalue()
	buffer.close()
	
	for i in range(count):
	    plt.figure(i).clear()
	plt.close()
	
	
	return image_png
	
	# graphic = base64.b64encode(image_png)
	# graphic = graphic.decode('utf-8')
	
	# return graphic
	
	$$ LANGUAGE plpython3u
	
	
	
<string>:36: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
2023-02-24 20:24:29.113 IST [18100] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-24 20:24:29.121 IST [18100] LOG:  listening on IPv6 address "::1", port 5432
2023-02-24 20:24:29.126 IST [18100] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-24 20:24:29.169 IST [3020] LOG:  database system was shut down at 2023-02-24 20:18:16 IST
2023-02-24 20:24:29.225 IST [18100] LOG:  database system is ready to accept connections
2023-02-24 20:24:35.377 IST [18100] LOG:  received fast shutdown request
2023-02-24 20:24:35.381 IST [18100] LOG:  aborting any active transactions
2023-02-24 20:24:35.385 IST [18100] LOG:  background worker "logical replication launcher" (PID 11392) exited with exit code 1
2023-02-24 20:24:35.407 IST [22408] LOG:  shutting down
2023-02-24 20:24:35.455 IST [18100] LOG:  database system is shut down
2023-02-24 20:26:47.403 IST [19408] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-24 20:26:47.411 IST [19408] LOG:  listening on IPv6 address "::1", port 5432
2023-02-24 20:26:47.416 IST [19408] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-24 20:26:47.459 IST [20876] LOG:  database system was shut down at 2023-02-24 20:26:33 IST
2023-02-24 20:26:47.534 IST [19408] LOG:  database system is ready to accept connections
2023-02-24 20:26:58.600 IST [19408] LOG:  received fast shutdown request
2023-02-24 20:26:58.604 IST [19408] LOG:  aborting any active transactions
2023-02-24 20:26:58.622 IST [19408] LOG:  background worker "logical replication launcher" (PID 20352) exited with exit code 1
2023-02-24 20:26:58.623 IST [8480] LOG:  shutting down
2023-02-24 20:26:58.796 IST [19408] LOG:  database system is shut down
2023-02-28 01:10:18.800 IST [12024] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-28 01:10:18.808 IST [12024] LOG:  listening on IPv6 address "::1", port 5432
2023-02-28 01:10:18.814 IST [12024] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-28 01:10:18.863 IST [10924] LOG:  database system was interrupted; last known up at 2023-02-25 12:56:04 IST
2023-02-28 01:10:19.448 IST [10924] LOG:  database system was not properly shut down; automatic recovery in progress
2023-02-28 01:10:19.452 IST [10924] LOG:  redo starts at 1/255F6FD8
2023-02-28 01:10:19.452 IST [10924] LOG:  invalid record length at 1/255F70C0: wanted 24, got 0
2023-02-28 01:10:19.452 IST [10924] LOG:  redo done at 1/255F7088 system usage: CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s
2023-02-28 01:10:19.521 IST [12024] LOG:  database system is ready to accept connections
2023-02-28 01:10:23.790 IST [12024] LOG:  received fast shutdown request
2023-02-28 01:10:23.793 IST [12024] LOG:  aborting any active transactions
2023-02-28 01:10:23.818 IST [12024] LOG:  background worker "logical replication launcher" (PID 4216) exited with exit code 1
2023-02-28 01:10:23.819 IST [844] LOG:  shutting down
2023-02-28 01:10:23.871 IST [12024] LOG:  database system is shut down
2023-02-28 14:12:01.645 IST [11944] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-02-28 14:12:01.654 IST [11944] LOG:  listening on IPv6 address "::1", port 5432
2023-02-28 14:12:01.660 IST [11944] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-02-28 14:12:01.716 IST [2740] LOG:  database system was interrupted; last known up at 2023-02-28 01:15:29 IST
2023-02-28 14:12:02.241 IST [2740] LOG:  database system was not properly shut down; automatic recovery in progress
2023-02-28 14:12:02.249 IST [2740] LOG:  redo starts at 1/2562CCD8
2023-02-28 14:12:02.249 IST [2740] LOG:  invalid record length at 1/2562CDC0: wanted 24, got 0
2023-02-28 14:12:02.249 IST [2740] LOG:  redo done at 1/2562CD88 system usage: CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s
2023-02-28 14:12:02.320 IST [11944] LOG:  database system is ready to accept connections
2023-02-28 14:12:10.670 IST [11944] LOG:  received fast shutdown request
2023-02-28 14:12:10.673 IST [11944] LOG:  aborting any active transactions
2023-02-28 14:12:10.691 IST [11944] LOG:  background worker "logical replication launcher" (PID 1920) exited with exit code 1
2023-02-28 14:12:10.691 IST [8904] LOG:  shutting down
2023-02-28 14:12:10.757 IST [11944] LOG:  database system is shut down
2023-03-13 20:35:20.842 IST [3908] FATAL:  pre-existing shared memory block is still in use
2023-03-13 20:35:20.842 IST [3908] HINT:  Check if there are any old server processes still running, and terminate them.
2023-03-13 20:35:20.843 IST [3908] LOG:  database system is shut down
2023-03-14 01:41:45.955 IST [2104] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-03-14 01:41:45.965 IST [2104] LOG:  listening on IPv6 address "::1", port 5432
2023-03-14 01:41:45.971 IST [2104] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-03-14 01:41:46.014 IST [11768] LOG:  database system was interrupted; last known up at 2023-03-13 21:39:47 IST
2023-03-14 01:41:46.318 IST [11768] LOG:  database system was not properly shut down; automatic recovery in progress
2023-03-14 01:41:46.322 IST [11768] LOG:  redo starts at 1/754EEDB0
2023-03-14 01:41:46.322 IST [11768] LOG:  invalid record length at 1/754EEDE8: wanted 24, got 0
2023-03-14 01:41:46.322 IST [11768] LOG:  redo done at 1/754EEDB0 system usage: CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s
2023-03-14 01:41:46.406 IST [2104] LOG:  database system is ready to accept connections
2023-03-14 01:55:44.467 IST [4668] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.
	
2023-03-14 01:55:44.467 IST [4668] LOG:  unexpected EOF on client connection with an open transaction
2023-03-14 03:47:38.163 IST [2104] LOG:  background worker "logical replication launcher" (PID 1072) was terminated by exception 0xC000013A
2023-03-14 03:47:38.163 IST [2104] HINT:  See C include file "ntstatus.h" for a description of the hexadecimal value.
2023-03-14 03:47:38.163 IST [2104] LOG:  terminating any other active server processes
2023-03-14 03:47:38.167 IST [2104] LOG:  statistics collector process (PID 16244) was terminated by exception 0xC000013A
2023-03-14 03:47:38.167 IST [2104] HINT:  See C include file "ntstatus.h" for a description of the hexadecimal value.
2023-03-14 03:47:38.168 IST [2104] LOG:  received fast shutdown request
^C2023-03-14 05:03:29.850 IST [9264] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-03-14 05:03:29.858 IST [9264] LOG:  listening on IPv6 address "::1", port 5432
2023-03-14 05:03:29.863 IST [9264] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-03-14 05:03:30.012 IST [9148] LOG:  database system was interrupted; last known up at 2023-03-14 01:41:46 IST
2023-03-14 05:03:30.427 IST [9148] LOG:  database system was not properly shut down; automatic recovery in progress
2023-03-14 05:03:30.431 IST [9148] LOG:  redo starts at 1/754EEE60
2023-03-14 05:03:30.432 IST [9148] LOG:  invalid record length at 1/754EEE98: wanted 24, got 0
2023-03-14 05:03:30.432 IST [9148] LOG:  redo done at 1/754EEE60 system usage: CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s
2023-03-14 05:03:30.509 IST [9264] LOG:  database system is ready to accept connections
2023-03-14 05:22:43.071 IST [15784] ERROR:  value too long for type character varying(50)
2023-03-14 05:22:43.071 IST [15784] STATEMENT:  INSERT INTO public.s_p_bse_allcapindex_constituents ("Scrip Code",company,"ISIN No.","Close Price")
		VALUES ($1,$2,$3,$4)
2023-03-14 05:23:28.243 IST [13688] ERROR:  value too long for type character varying(50)
2023-03-14 05:23:28.243 IST [13688] STATEMENT:  INSERT INTO public.bseall ("Scrip Code",company,"ISIN No.","Close Price")
		VALUES ($1,$2,$3,$4)
2023-03-14 05:25:23.943 IST [9708] ERROR:  value too long for type character varying(50)
2023-03-14 05:25:23.943 IST [9708] STATEMENT:  INSERT INTO public.bseall ("Scrip Code",company,"ISIN No.","Close Price")
		VALUES ($1,$2,$3,$4)
2023-03-14 05:29:26.729 IST [2632] ERROR:  syntax error at or near "on" at character 33
2023-03-14 05:29:26.729 IST [2632] STATEMENT:  select * from bseall,growwscrip on bseall.company like growwscrip."Scrip Name"
2023-03-14 05:30:53.229 IST [2632] ERROR:  syntax error at or near "%" at character 67
2023-03-14 05:30:53.229 IST [2632] STATEMENT:  select * from bseall inner join growwscrip on bseall.company like %growwscrip."Scrip Name"%
2023-03-14 05:38:52.120 IST [15552] ERROR:  value too long for type character varying(50)
2023-03-14 05:38:52.120 IST [15552] STATEMENT:  INSERT INTO public.bseall ("Security Code","Issuer Name","Security Id","Security Name",status,"Group","Face Value","ISIN No",industry,instrument,"Sector Name","Industry New Name","Igroup Name","ISubgroup Name")
		VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14)
2023-03-14 06:08:57.172 IST [9264] LOG:  server process (PID 2632) was terminated by exception 0xC000013A
2023-03-14 06:08:57.172 IST [9264] DETAIL:  Failed process was running: SHOW search_path
2023-03-14 06:08:57.172 IST [9264] HINT:  See C include file "ntstatus.h" for a description of the hexadecimal value.
2023-03-14 06:08:57.172 IST [9264] LOG:  terminating any other active server processes
^C2023-03-14 11:54:16.384 IST [528] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-03-14 11:54:16.394 IST [528] LOG:  listening on IPv6 address "::1", port 5432
2023-03-14 11:54:16.400 IST [528] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-03-14 11:54:16.455 IST [11644] LOG:  database system was interrupted; last known up at 2023-03-14 05:53:34 IST
2023-03-14 11:54:17.159 IST [11644] LOG:  database system was not properly shut down; automatic recovery in progress
2023-03-14 11:54:17.164 IST [11644] LOG:  redo starts at 1/756AE9B8
2023-03-14 11:54:17.167 IST [11644] LOG:  invalid record length at 1/756B6A00: wanted 24, got 0
2023-03-14 11:54:17.167 IST [11644] LOG:  redo done at 1/756B69C8 system usage: CPU: user: 0.00 s, system: 0.01 s, elapsed: 0.00 s
2023-03-14 11:54:17.249 IST [528] LOG:  database system is ready to accept connections
2023-03-14 12:11:08.716 IST [528] LOG:  received fast shutdown request
2023-03-14 12:11:08.719 IST [528] LOG:  aborting any active transactions
2023-03-14 12:11:08.719 IST [2680] FATAL:  terminating connection due to administrator command
2023-03-14 12:11:08.723 IST [528] LOG:  background worker "logical replication launcher" (PID 3392) exited with exit code 1
2023-03-14 12:11:08.742 IST [19140] LOG:  shutting down
2023-03-14 12:11:08.829 IST [528] LOG:  database system is shut down
2023-03-25 03:45:56.672 IST [9500] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-03-25 03:45:56.684 IST [9500] LOG:  listening on IPv6 address "::1", port 5432
2023-03-25 03:45:56.693 IST [9500] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-03-25 03:45:56.793 IST [17144] LOG:  database system was interrupted; last known up at 2023-03-25 03:09:00 IST
2023-03-25 03:45:57.967 IST [17144] LOG:  database system was not properly shut down; automatic recovery in progress
2023-03-25 03:45:57.978 IST [17144] LOG:  redo starts at 1/D2FB8698
2023-03-25 03:45:57.986 IST [17144] LOG:  invalid record length at 1/D2FC73B8: wanted 24, got 0
2023-03-25 03:45:57.986 IST [17144] LOG:  redo done at 1/D2FC7380 system usage: CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s
2023-03-25 03:45:58.144 IST [9500] LOG:  database system is ready to accept connections
2023-03-25 03:48:53.068 IST [11144] ERROR:  function "ema_func" already exists with same argument types
2023-03-25 03:48:53.068 IST [11144] STATEMENT:  
	
	create function ema_func(numeric, numeric) returns numeric
	  language plpgsql as $$
	declare
	  alpha numeric := 0.5;
	begin
	  -- uncomment the following line to see what the parameters mean
	  -- raise info 'ema_func: % %', $1, $2;
	  return case
	              when $1 is null then $2
	              else alpha * $2 + (1 - alpha) * $1
	         end;
	end
	$$
2023-03-25 04:05:46.246 IST [11144] ERROR:  return type of transition function rsi_ema_accum is not rsi_state_ema
2023-03-25 04:05:46.246 IST [11144] STATEMENT:  
	
	CREATE or replace AGGREGATE rsi_ema(numeric) ( -- NUMERIC is what the function returns
	    initcond = '(0,0,{},{})', -- this is the initial state of type POINT
	    stype = RSI_STATE_EMA, -- this is the type of the state that will be passed between steps
	    sfunc = rsi_ema_accum, -- this is the function that knows how to compute a new average from existing average and new element. Takes in the state (type POINT) and an element for the step (type NUMERIC)
	    finalfunc =  rsi_ema_final -- returns the result for the aggregate function. Takes in the state of type POINT (like all other steps) and returns the result as what the aggregate function returns - NUMERIC 
	)
	
2023-03-25 04:06:08.422 IST [11144] ERROR:  cannot change return type of existing function
2023-03-25 04:06:08.422 IST [11144] HINT:  Use DROP FUNCTION rsi_ema_accum(rsi_state_ema,numeric) first.
2023-03-25 04:06:08.422 IST [11144] STATEMENT:  CREATE OR replace FUNCTION rsi_ema_accum (state RSI_STATE_EMA, num_elem numeric) -- performs accumulated sum
	RETURNS RSI_STATE_EMA
	
	AS $$
	DECLARE 
		
	BEGIN
		if state.prev_close > 0 then
			if num_elem > state.prev_close then
				state.avg_gain[state.step] := (num_elem - state.prev_close);
				state.avg_loss[state.step] := 0;
			 	
			else
				state.avg_loss[state.step] := state.prev_close - num_elem;
				state.avg_gain[state.step] := 0;
			end if;	
		
		end if; 
		
		state.step := state.step + 1;
		state.prev_close := num_elem;
	
	    return state;
	END; 
	
	
	$$ LANGUAGE plpgsql
2023-03-25 04:06:09.542 IST [11144] ERROR:  cannot change return type of existing function
2023-03-25 04:06:09.542 IST [11144] HINT:  Use DROP FUNCTION rsi_ema_accum(rsi_state_ema,numeric) first.
2023-03-25 04:06:09.542 IST [11144] STATEMENT:  CREATE OR replace FUNCTION rsi_ema_accum (state RSI_STATE_EMA, num_elem numeric) -- performs accumulated sum
	RETURNS RSI_STATE_EMA
	
	AS $$
	DECLARE 
		
	BEGIN
		if state.prev_close > 0 then
			if num_elem > state.prev_close then
				state.avg_gain[state.step] := (num_elem - state.prev_close);
				state.avg_loss[state.step] := 0;
			 	
			else
				state.avg_loss[state.step] := state.prev_close - num_elem;
				state.avg_gain[state.step] := 0;
			end if;	
		
		end if; 
		
		state.step := state.step + 1;
		state.prev_close := num_elem;
	
	    return state;
	END; 
	
	
	$$ LANGUAGE plpgsql
2023-03-25 04:06:42.272 IST [11144] ERROR:  function rsi_sma(numeric) does not exist at character 27
2023-03-25 04:06:42.272 IST [11144] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-03-25 04:06:42.272 IST [11144] STATEMENT:  select sc_code,trade_date,rsi_sma(close) over(partition by sc_code order by trade_date asc rows between 14 preceding and current row) from growportfolioview where sc_code  = 541154   order by trade_date desc
2023-03-25 04:07:08.418 IST [11144] ERROR:  record "state" has no field "avg_gain_arr"
2023-03-25 04:07:08.418 IST [11144] CONTEXT:  SQL statement "SELECT ema(val,0.5)                  FROM (SELECT unnest(state.avg_gain_arr) AS val) t limit 1 offset (state.step -1)"
	PL/pgSQL function rsi_ema_final(rsi_state_ema) line 7 at SQL statement
2023-03-25 04:07:08.418 IST [11144] STATEMENT:  
	select sc_code,trade_date,rsi_ema(close) over(partition by sc_code order by trade_date asc rows between 14 preceding and current row) from growportfolioview where sc_code  = 541154   order by trade_date desc
	
2023-03-25 04:08:02.984 IST [11144] ERROR:  function ema(numeric, numeric) does not exist at character 8
2023-03-25 04:08:02.984 IST [11144] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-03-25 04:08:02.984 IST [11144] QUERY:  SELECT ema(val,0.5)                  FROM (SELECT unnest(state.avg_gain) AS val) t limit 1 offset (state.step -1)
2023-03-25 04:08:02.984 IST [11144] CONTEXT:  PL/pgSQL function rsi_ema_final(rsi_state_ema) line 7 at SQL statement
2023-03-25 04:08:02.984 IST [11144] STATEMENT:  select sc_code,trade_date,rsi_ema(close) over(partition by sc_code order by trade_date asc rows between 14 preceding and current row) from growportfolioview where sc_code  = 541154   order by trade_date desc
2023-03-25 04:08:22.589 IST [11144] ERROR:  function "ema_func" already exists with same argument types
2023-03-25 04:08:22.589 IST [11144] STATEMENT:  
	
	create function ema_func(numeric, numeric) returns numeric
	  language plpgsql as $$
	declare
	  alpha numeric := 0.5;
	begin
	  -- uncomment the following line to see what the parameters mean
	  -- raise info 'ema_func: % %', $1, $2;
	  return case
	              when $1 is null then $2
	              else alpha * $2 + (1 - alpha) * $1
	         end;
	end
	$$
2023-03-25 04:08:27.444 IST [11144] ERROR:  function "ema" already exists with same argument types
2023-03-25 04:08:27.444 IST [11144] STATEMENT:  create aggregate ema(basetype = numeric, sfunc = ema_func, stype = numeric)
	
2023-03-25 04:09:25.308 IST [11144] ERROR:  function ema(numeric, numeric) does not exist at character 8
2023-03-25 04:09:25.308 IST [11144] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-03-25 04:09:25.308 IST [11144] QUERY:  SELECT ema(val,0.5)                  FROM (SELECT unnest(state.avg_gain) AS val) t limit 1 offset (state.step -1)
2023-03-25 04:09:25.308 IST [11144] CONTEXT:  PL/pgSQL function rsi_ema_final(rsi_state_ema) line 7 at SQL statement
2023-03-25 04:09:25.308 IST [11144] STATEMENT:  
	select sc_code,trade_date,rsi_ema(close) over(partition by sc_code order by trade_date asc rows between 14 preceding and current row) from growportfolioview where sc_code  = 541154   order by trade_date desc
	
2023-03-25 04:14:06.398 IST [11144] ERROR:  relation "data" does not exist at character 66
2023-03-25 04:14:06.398 IST [11144] STATEMENT:  
	
	select x, ema(x, 0.5 /* alpha */) over (order by n asc) from data
	
2023-03-25 04:22:04.538 IST [11144] ERROR:  OFFSET must not be negative
2023-03-25 04:22:04.538 IST [11144] CONTEXT:  SQL statement "SELECT ema(val,0.5)                  FROM (SELECT unnest(state.avg_gain) AS val) t limit 1 offset offset_num"
	PL/pgSQL function rsi_ema_final(rsi_state_ema) line 9 at SQL statement
2023-03-25 04:22:04.538 IST [11144] STATEMENT:  select sc_code,trade_date,rsi_ema(close) over(partition by sc_code order by trade_date asc rows between 14 preceding and current row) from growportfolioview where sc_code  = 541154   order by trade_date desc
	
	
2023-03-25 04:41:18.560 IST [11144] ERROR:  function ema(text, numeric) does not exist at character 8
2023-03-25 04:41:18.560 IST [11144] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-03-25 04:41:18.560 IST [11144] STATEMENT:  SELECT ema(val,0.5)  FROM (SELECT '{1,2,3,4,5,6,7,8,9,10,11}' AS val) t 
2023-03-25 04:41:57.119 IST [11144] ERROR:  syntax error at or near "from" at character 29
2023-03-25 04:41:57.119 IST [11144] STATEMENT:  SELECT ema(close,0.5)  FROM from growportfolioview where sc_code  = 541154 
2023-03-25 04:47:55.135 IST [11144] ERROR:  array subscript in assignment must not be null
2023-03-25 04:47:55.135 IST [11144] CONTEXT:  PL/pgSQL function ema_sfunc(numeric[],numeric,numeric) line 9 at assignment
	SQL statement "SELECT ema(val,0.2)                 FROM (SELECT unnest(state.avg_gain) AS val) t"
	PL/pgSQL function rsi_ema_final(rsi_state_ema) line 9 at SQL statement
2023-03-25 04:47:55.135 IST [11144] STATEMENT:  
	select sc_code,trade_date,rsi_ema(close) over(partition by sc_code order by trade_date asc rows between 14 preceding and current row) from growportfolioview where sc_code  = 541154   order by trade_date desc
	
2023-03-25 04:52:38.348 IST [11144] ERROR:  syntax error at or near "ema_avg_l" at character 685
2023-03-25 04:52:38.348 IST [11144] STATEMENT:  
	
	CREATE OR replace FUNCTION rsi_ema_final (state RSI_STATE_EMA) -- performs devision and returns final value
	RETURNS NUMERIC
	AS $$
	declare 
		ema_avg_g numeric[];
		ema_avg_l numeric[];
		rs numeric;
	    offset_num integer;
	    count integer;
	begin 
		SELECT ema(val,0.2) into  ema_avg_g FROM (SELECT unnest(state.avg_gain) AS val) t ;	 	
		SELECT ema(val,0.2) into  ema_avg_l FROM (SELECT unnest(state.avg_loss) AS val) t ;	
	
		count = length(ema_avg_g)-1
	--	SELECT avg(val) into  ema_avg_g FROM (SELECT unnest(state.avg_gain) AS val) t ;	 	
	--	SELECT avg(val) into  ema_avg_l FROM (SELECT unnest(state.avg_loss) AS val) t ;	
	
	--	return ema_avg_g  / ema_avg_l;
		
		if ema_avg_l = 0 then 
			rs := 100 ;
		else
			rs :=   (100 - (100/(1+ ( (ema_avg_g[count]  / ema_avg_l[count] )))));
		end if;
		
	 	return rs;
	end;
	$$ LANGUAGE plpgsql
	
2023-03-25 04:53:01.873 IST [11144] ERROR:  function length(numeric[]) does not exist at character 9
2023-03-25 04:53:01.873 IST [11144] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-03-25 04:53:01.873 IST [11144] QUERY:  count = length(ema_avg_g)-1
2023-03-25 04:53:01.873 IST [11144] CONTEXT:  PL/pgSQL function rsi_ema_final(rsi_state_ema) line 12 at assignment
2023-03-25 04:53:01.873 IST [11144] STATEMENT:  
	select sc_code,trade_date,rsi_ema(close) over(partition by sc_code order by trade_date asc rows between 14 preceding and current row) from growportfolioview where sc_code  = 541154   order by trade_date desc
	
2023-03-25 04:55:11.351 IST [11144] ERROR:  operator does not exist: numeric[] = integer at character 11
2023-03-25 04:55:11.351 IST [11144] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-03-25 04:55:11.351 IST [11144] QUERY:  ema_avg_l = 0
2023-03-25 04:55:11.351 IST [11144] CONTEXT:  PL/pgSQL function rsi_ema_final(rsi_state_ema) line 18 at IF
2023-03-25 04:55:11.351 IST [11144] STATEMENT:  
	select sc_code,trade_date,rsi_ema(close) over(partition by sc_code order by trade_date asc rows between 14 preceding and current row) from growportfolioview where sc_code  = 541154   order by trade_date desc
	
2023-03-25 04:56:45.305 IST [11144] ERROR:  operator does not exist: numeric[] = integer at character 11
2023-03-25 04:56:45.305 IST [11144] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-03-25 04:56:45.305 IST [11144] QUERY:  ema_avg_l = 0
2023-03-25 04:56:45.305 IST [11144] CONTEXT:  PL/pgSQL function rsi_ema_final(rsi_state_ema) line 18 at IF
2023-03-25 04:56:45.305 IST [11144] STATEMENT:  
	select sc_code,trade_date,rsi_ema(close) over(partition by sc_code order by trade_date asc rows between 14 preceding and current row) from growportfolioview where sc_code  = 541154   order by trade_date desc
	
2023-03-25 04:58:08.434 IST [11144] ERROR:  operator does not exist: numeric[] = integer at character 11
2023-03-25 04:58:08.434 IST [11144] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-03-25 04:58:08.434 IST [11144] QUERY:  ema_avg_l = 0
2023-03-25 04:58:08.434 IST [11144] CONTEXT:  PL/pgSQL function rsi_ema_final(rsi_state_ema) line 18 at IF
2023-03-25 04:58:08.434 IST [11144] STATEMENT:  
	select sc_code,trade_date,rsi_ema(close) over(partition by sc_code order by trade_date asc rows between 14 preceding and current row) from growportfolioview where sc_code  = 541154   order by trade_date desc
	
2023-03-25 05:17:59.147 IST [11144] ERROR:  function unnest(unknown) is not unique at character 34
2023-03-25 05:17:59.147 IST [11144] HINT:  Could not choose a best candidate function. You might need to add explicit type casts.
2023-03-25 05:17:59.147 IST [11144] STATEMENT:  SELECT ema(val,0.5) FROM (SELECT unnest('{1,2,3,4,5,6,7,8}') AS val) t
2023-03-25 05:18:12.497 IST [11144] ERROR:  function unnest(unknown) is not unique at character 8
2023-03-25 05:18:12.497 IST [11144] HINT:  Could not choose a best candidate function. You might need to add explicit type casts.
2023-03-25 05:18:12.497 IST [11144] STATEMENT:  SELECT unnest('{1,2,3,4,5,6,7,8}') AS val
2023-03-25 05:31:29.003 IST [11144] ERROR:  syntax error at or near "[" at character 501
2023-03-25 05:31:29.003 IST [11144] STATEMENT:  
	
	
	CREATE OR replace FUNCTION rsi_ema_final (state RSI_STATE_EMA) -- performs devision and returns final value
	RETURNS NUMERIC
	AS $$
	declare 
		ema_avg_g numeric;
		ema_avg_l numeric;
		rs numeric;
	    offset_num integer;
	    count integer;
	   alpha numeric;
	begin 
	--	alpha := 2.0/(state.step+1);
	--
	--	SELECT ema(val,alpha) into  ema_avg_g FROM (SELECT unnest(state.avg_gain) AS val) t ;	 	
	--	SELECT ema(val,alpha) into  ema_avg_l FROM (SELECT unnest(state.avg_loss) AS val) t ;	
	
	[(Previous avg. gain)*13)+ current gain)]/14
		SELECT avg(val) into  ema_avg_g FROM (SELECT unnest(state.avg_gain[state.step-1:]) AS val) t
		ema_avg_g := (ema_avg_g*(state.step -1) + state.avg_gain[state.step] ) / state.step;
	
		SELECT avg(val) into  ema_avg_l FROM (SELECT unnest(state.avg_loss[state.step-1:]) AS val) t
		ema_avg_l := (ema_avg_l*(state.step -1) + state.avg_loss[state.step] ) / state.step;
	--	SELECT avg(val) into  ema_avg_g FROM (SELECT unnest(state.avg_gain) AS val) t ;	 	
	--	SELECT avg(val) into  ema_avg_l FROM (SELECT unnest(state.avg_loss) AS val) t ;	
	
	--	return ema_avg_g  / ema_avg_l;
		
		if ema_avg_l = 0 then 
			rs := 100 ;
		else
			rs :=   (100 - (100/(1+ ( (ema_avg_g  / ema_avg_l )))));
		end if;
		
	 	return rs;
	end;
	$$ LANGUAGE plpgsql
2023-03-25 05:31:58.770 IST [11144] ERROR:  syntax error at or near "ema_avg_g" at character 595
2023-03-25 05:31:58.770 IST [11144] STATEMENT:  
	CREATE OR replace FUNCTION rsi_ema_final (state RSI_STATE_EMA) -- performs devision and returns final value
	RETURNS NUMERIC
	AS $$
	declare 
		ema_avg_g numeric;
		ema_avg_l numeric;
		rs numeric;
	    offset_num integer;
	    count integer;
	   alpha numeric;
	begin 
	--	alpha := 2.0/(state.step+1);
	--
	--	SELECT ema(val,alpha) into  ema_avg_g FROM (SELECT unnest(state.avg_gain) AS val) t ;	 	
	--	SELECT ema(val,alpha) into  ema_avg_l FROM (SELECT unnest(state.avg_loss) AS val) t ;	
	
	
		SELECT avg(val) into  ema_avg_g FROM (SELECT unnest(state.avg_gain[state.step-1:]) AS val) t
		ema_avg_g := (ema_avg_g*(state.step -1) + state.avg_gain[state.step] ) / state.step;
	
		SELECT avg(val) into  ema_avg_l FROM (SELECT unnest(state.avg_loss[state.step-1:]) AS val) t
		ema_avg_l := (ema_avg_l*(state.step -1) + state.avg_loss[state.step] ) / state.step;
	--	SELECT avg(val) into  ema_avg_g FROM (SELECT unnest(state.avg_gain) AS val) t ;	 	
	--	SELECT avg(val) into  ema_avg_l FROM (SELECT unnest(state.avg_loss) AS val) t ;	
	
	--	return ema_avg_g  / ema_avg_l;
		
		if ema_avg_l = 0 then 
			rs := 100 ;
		else
			rs :=   (100 - (100/(1+ ( (ema_avg_g  / ema_avg_l )))));
		end if;
		
	 	return rs;
	end;
	$$ LANGUAGE plpgsql
2023-03-25 05:39:09.062 IST [9500] LOG:  background worker "logical replication launcher" (PID 10184) was terminated by exception 0xC000013A
2023-03-25 05:39:09.062 IST [9500] HINT:  See C include file "ntstatus.h" for a description of the hexadecimal value.
2023-03-25 05:39:09.062 IST [9500] LOG:  terminating any other active server processes
2023-03-25 05:39:09.089 IST [9500] LOG:  statistics collector process (PID 9132) was terminated by exception 0xC000013A
2023-03-25 05:39:09.089 IST [9500] HINT:  See C include file "ntstatus.h" for a description of the hexadecimal value.
^C2023-03-25 18:49:58.314 IST [788] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-03-25 18:49:58.322 IST [788] LOG:  listening on IPv6 address "::1", port 5432
2023-03-25 18:49:58.327 IST [788] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-03-25 18:49:58.372 IST [8588] LOG:  database system was interrupted; last known up at 2023-03-25 05:35:59 IST
2023-03-25 18:49:58.842 IST [8588] LOG:  database system was not properly shut down; automatic recovery in progress
2023-03-25 18:49:58.846 IST [8588] LOG:  redo starts at 1/D309CA30
2023-03-25 18:49:58.848 IST [8588] LOG:  invalid record length at 1/D30A5A68: wanted 24, got 0
2023-03-25 18:49:58.848 IST [8588] LOG:  redo done at 1/D30A5A30 system usage: CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s
2023-03-25 18:49:58.931 IST [788] LOG:  database system is ready to accept connections
2023-03-30 11:49:49.745 IST [14516] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-03-30 11:49:49.753 IST [14516] LOG:  listening on IPv6 address "::1", port 5432
2023-03-30 11:49:49.759 IST [14516] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-03-30 11:49:49.814 IST [2748] LOG:  database system was interrupted; last known up at 2023-03-29 11:59:56 IST
2023-03-30 11:49:50.357 IST [2748] LOG:  database system was not properly shut down; automatic recovery in progress
2023-03-30 11:49:50.362 IST [2748] LOG:  redo starts at 1/D45B49D0
2023-03-30 11:49:50.363 IST [2748] LOG:  invalid record length at 1/D45B4AB8: wanted 24, got 0
2023-03-30 11:49:50.363 IST [2748] LOG:  redo done at 1/D45B4A80 system usage: CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s
2023-03-30 11:49:50.437 IST [14516] LOG:  database system is ready to accept connections
2023-03-30 11:53:54.865 IST [14516] LOG:  received fast shutdown request
2023-03-30 11:53:54.868 IST [14516] LOG:  aborting any active transactions
2023-03-30 11:53:54.898 IST [14516] LOG:  background worker "logical replication launcher" (PID 13328) exited with exit code 1
2023-03-30 11:53:54.903 IST [23860] LOG:  shutting down
2023-03-30 11:53:54.988 IST [14516] LOG:  database system is shut down
2023-05-09 01:21:41.006 IST [13020] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-05-09 01:21:41.015 IST [13020] LOG:  listening on IPv6 address "::1", port 5432
2023-05-09 01:21:41.021 IST [13020] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-05-09 01:21:41.082 IST [118412] LOG:  database system was interrupted; last known up at 2023-04-29 14:11:26 IST
2023-05-09 01:21:41.538 IST [118412] LOG:  database system was not properly shut down; automatic recovery in progress
2023-05-09 01:21:41.542 IST [118412] LOG:  redo starts at 1/D81711B0
2023-05-09 01:21:41.543 IST [118412] LOG:  invalid record length at 1/D8171298: wanted 24, got 0
2023-05-09 01:21:41.543 IST [118412] LOG:  redo done at 1/D8171260 system usage: CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s
2023-05-09 01:21:41.603 IST [13020] LOG:  database system is ready to accept connections
2023-05-09 01:21:45.221 IST [13020] LOG:  received fast shutdown request
2023-05-09 01:21:45.232 IST [13020] LOG:  aborting any active transactions
2023-05-09 01:21:45.236 IST [13020] LOG:  background worker "logical replication launcher" (PID 50724) exited with exit code 1
2023-05-09 01:21:45.263 IST [26396] LOG:  shutting down
2023-05-09 01:21:45.339 IST [13020] LOG:  database system is shut down
2023-05-09 03:23:55.896 IST [17568] LOG:  starting PostgreSQL 14.6, compiled by Visual C++ build 1914, 64-bit
2023-05-09 03:23:55.905 IST [17568] LOG:  listening on IPv6 address "::1", port 5432
2023-05-09 03:23:55.911 IST [17568] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-05-09 03:23:55.973 IST [84576] LOG:  database system was interrupted while in recovery at 2023-05-09 02:12:54 IST
2023-05-09 03:23:55.973 IST [84576] HINT:  This probably means that some data is corrupted and you will have to use the last backup for recovery.
2023-05-09 03:23:56.374 IST [84576] LOG:  database system was not properly shut down; automatic recovery in progress
2023-05-09 03:23:56.379 IST [84576] LOG:  redo starts at 1/D8194678
2023-05-09 03:23:56.379 IST [84576] LOG:  invalid record length at 1/D8194760: wanted 24, got 0
2023-05-09 03:23:56.379 IST [84576] LOG:  redo done at 1/D8194728 system usage: CPU: user: 0.00 s, system: 0.01 s, elapsed: 0.00 s
2023-05-09 03:23:56.441 IST [17568] LOG:  database system is ready to accept connections
2023-05-09 03:26:32.763 IST [38652] ERROR:  function "get_company_ratio" already exists with same argument types
2023-05-09 03:26:32.763 IST [38652] STATEMENT:  CREATE FUNCTION get_company_ratio(code integer, ratio text)
	  RETURNS numeric
	AS $$
	
	import pandas as pd
	import requests
	from bs4 import BeautifulSoup
	
	def get_company_ratios(code):   
	
	    URL = f"https://www.screener.in/company/{code}/consolidated/"
	   
	    company_ratios = {}
	    try:
	        # company ratios
	        r = requests.get(URL)
	        
	        soup = BeautifulSoup(r.content,features="lxml")
	        
	        table = soup.find('ul', attrs = {'id':'top-ratios'}) 
	        
	        for row in table.findAll('li'):
	            if row.span.text.strip() == 'High / Low':
	                pass
	            else:
	                company_ratios[row.span.text.strip().lower().replace(' ','_')] = float(row.findAll('span')[1].span.text.strip().replace(',',''))
	
	       
	
	
	        table_MN = pd.read_html(URL)
	       
	        # print(table_MN[6])
	        borrowing_prev = float(table_MN[6].iloc[:,-2:].iloc[2][0])
	        borrowing_now = float(table_MN[6].iloc[:,-2:].iloc[2][1])
	
	        reserves_now = float(table_MN[6].iloc[:,-2:].iloc[1][1])
	        share_capital = float(table_MN[6].iloc[:,-2:].iloc[0][1])
	        
	    
	        de_ratio = borrowing_now/(reserves_now+share_capital)
	        company_ratios['de_ratio'] = round(de_ratio,2)
	
	        return company_ratios[pe]
	    except Exception as e:
	        print("Error in getting ratio")
	        return {}
	
	4
	
	$$ LANGUAGE plpython3u
	
2023-05-09 03:28:38.296 IST [38652] ERROR:  ModuleNotFoundError: No module named 'bs4'
2023-05-09 03:28:38.296 IST [38652] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "get_company_ratio", line 5, in <module>
	    from bs4 import BeautifulSoup
	PL/Python function "get_company_ratio"
2023-05-09 03:28:38.296 IST [38652] STATEMENT:  select get_company_ratio(524804,'stock_p/e')
2023-05-09 03:29:15.945 IST [38652] ERROR:  ModuleNotFoundError: No module named 'bs4'
2023-05-09 03:29:15.945 IST [38652] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "get_company_ratio", line 5, in <module>
	    from bs4 import BeautifulSoup
	PL/Python function "get_company_ratio"
2023-05-09 03:29:15.945 IST [38652] STATEMENT:  select get_company_ratio(524804,'stock_p/e')
2023-05-09 03:29:31.529 IST [38652] ERROR:  ModuleNotFoundError: No module named 'bs4'
2023-05-09 03:29:31.529 IST [38652] CONTEXT:  Traceback (most recent call last):
	  PL/Python function "get_company_ratio", line 5, in <module>
	    from bs4 import BeautifulSoup
	PL/Python function "get_company_ratio"
2023-05-09 03:29:31.529 IST [38652] STATEMENT:  select get_company_ratio(524804,'stock_p/e')
2023-05-09 03:30:04.450 IST [17568] LOG:  received fast shutdown request
2023-05-09 03:30:04.453 IST [17568] LOG:  aborting any active transactions
2023-05-09 03:30:04.453 IST [38652] FATAL:  terminating connection due to administrator command
2023-05-09 03:30:04.453 IST [43260] FATAL:  terminating connection due to administrator command
2023-05-09 03:30:04.459 IST [17568] LOG:  background worker "logical replication launcher" (PID 98692) exited with exit code 1
2023-05-09 03:30:04.470 IST [73424] LOG:  shutting down
2023-05-09 03:30:04.522 IST [17568] LOG:  database system is shut down
